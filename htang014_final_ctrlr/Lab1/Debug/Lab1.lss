
Lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000114  00800100  00000f80  00001014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f80  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000639  00800214  00800214  00001128  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001128  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001158  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000230  00000000  00000000  00001198  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002183  00000000  00000000  000013c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000920  00000000  00000000  0000354b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002190  00000000  00000000  00003e6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005a0  00000000  00000000  00005ffc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000e1eb  00000000  00000000  0000659c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000182d  00000000  00000000  00014787  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000228  00000000  00000000  00015fb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000014c1  00000000  00000000  000161dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	8b c7       	rjmp	.+3862   	; 0xf4c <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	12 e0       	ldi	r17, 0x02	; 2
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e8       	ldi	r30, 0x80	; 128
  a0:	ff e0       	ldi	r31, 0x0F	; 15
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 31       	cpi	r26, 0x14	; 20
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	28 e0       	ldi	r18, 0x08	; 8
  b4:	a4 e1       	ldi	r26, 0x14	; 20
  b6:	b2 e0       	ldi	r27, 0x02	; 2
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ad 34       	cpi	r26, 0x4D	; 77
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	91 d2       	rcall	.+1314   	; 0x5e6 <main>
  c4:	5b c7       	rjmp	.+3766   	; 0xf7c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <pvPortMalloc>:
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	ec 01       	movw	r28, r24
  ce:	e2 d3       	rcall	.+1988   	; 0x894 <vTaskSuspendAll>
  d0:	20 91 14 02 	lds	r18, 0x0214	; 0x800214 <__data_end>
  d4:	30 91 15 02 	lds	r19, 0x0215	; 0x800215 <__data_end+0x1>
  d8:	ce 01       	movw	r24, r28
  da:	82 0f       	add	r24, r18
  dc:	93 1f       	adc	r25, r19
  de:	8c 3d       	cpi	r24, 0xDC	; 220
  e0:	45 e0       	ldi	r20, 0x05	; 5
  e2:	94 07       	cpc	r25, r20
  e4:	58 f4       	brcc	.+22     	; 0xfc <pvPortMalloc+0x34>
  e6:	28 17       	cp	r18, r24
  e8:	39 07       	cpc	r19, r25
  ea:	58 f4       	brcc	.+22     	; 0x102 <pvPortMalloc+0x3a>
  ec:	e9 01       	movw	r28, r18
  ee:	ca 5e       	subi	r28, 0xEA	; 234
  f0:	dd 4f       	sbci	r29, 0xFD	; 253
  f2:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <__data_end+0x1>
  f6:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <__data_end>
  fa:	05 c0       	rjmp	.+10     	; 0x106 <pvPortMalloc+0x3e>
  fc:	c0 e0       	ldi	r28, 0x00	; 0
  fe:	d0 e0       	ldi	r29, 0x00	; 0
 100:	02 c0       	rjmp	.+4      	; 0x106 <pvPortMalloc+0x3e>
 102:	c0 e0       	ldi	r28, 0x00	; 0
 104:	d0 e0       	ldi	r29, 0x00	; 0
 106:	8d d4       	rcall	.+2330   	; 0xa22 <xTaskResumeAll>
 108:	ce 01       	movw	r24, r28
 10a:	df 91       	pop	r29
 10c:	cf 91       	pop	r28
 10e:	08 95       	ret

00000110 <vPortFree>:
 110:	08 95       	ret

00000112 <vListInitialise>:
 112:	fc 01       	movw	r30, r24
 114:	03 96       	adiw	r24, 0x03	; 3
 116:	92 83       	std	Z+2, r25	; 0x02
 118:	81 83       	std	Z+1, r24	; 0x01
 11a:	2f ef       	ldi	r18, 0xFF	; 255
 11c:	3f ef       	ldi	r19, 0xFF	; 255
 11e:	34 83       	std	Z+4, r19	; 0x04
 120:	23 83       	std	Z+3, r18	; 0x03
 122:	96 83       	std	Z+6, r25	; 0x06
 124:	85 83       	std	Z+5, r24	; 0x05
 126:	90 87       	std	Z+8, r25	; 0x08
 128:	87 83       	std	Z+7, r24	; 0x07
 12a:	10 82       	st	Z, r1
 12c:	08 95       	ret

0000012e <vListInitialiseItem>:
 12e:	fc 01       	movw	r30, r24
 130:	11 86       	std	Z+9, r1	; 0x09
 132:	10 86       	std	Z+8, r1	; 0x08
 134:	08 95       	ret

00000136 <vListInsertEnd>:
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	fc 01       	movw	r30, r24
 13c:	db 01       	movw	r26, r22
 13e:	21 81       	ldd	r18, Z+1	; 0x01
 140:	32 81       	ldd	r19, Z+2	; 0x02
 142:	e9 01       	movw	r28, r18
 144:	8a 81       	ldd	r24, Y+2	; 0x02
 146:	9b 81       	ldd	r25, Y+3	; 0x03
 148:	13 96       	adiw	r26, 0x03	; 3
 14a:	9c 93       	st	X, r25
 14c:	8e 93       	st	-X, r24
 14e:	12 97       	sbiw	r26, 0x02	; 2
 150:	81 81       	ldd	r24, Z+1	; 0x01
 152:	92 81       	ldd	r25, Z+2	; 0x02
 154:	15 96       	adiw	r26, 0x05	; 5
 156:	9c 93       	st	X, r25
 158:	8e 93       	st	-X, r24
 15a:	14 97       	sbiw	r26, 0x04	; 4
 15c:	8a 81       	ldd	r24, Y+2	; 0x02
 15e:	9b 81       	ldd	r25, Y+3	; 0x03
 160:	ec 01       	movw	r28, r24
 162:	7d 83       	std	Y+5, r23	; 0x05
 164:	6c 83       	std	Y+4, r22	; 0x04
 166:	e9 01       	movw	r28, r18
 168:	7b 83       	std	Y+3, r23	; 0x03
 16a:	6a 83       	std	Y+2, r22	; 0x02
 16c:	72 83       	std	Z+2, r23	; 0x02
 16e:	61 83       	std	Z+1, r22	; 0x01
 170:	19 96       	adiw	r26, 0x09	; 9
 172:	fc 93       	st	X, r31
 174:	ee 93       	st	-X, r30
 176:	18 97       	sbiw	r26, 0x08	; 8
 178:	80 81       	ld	r24, Z
 17a:	8f 5f       	subi	r24, 0xFF	; 255
 17c:	80 83       	st	Z, r24
 17e:	df 91       	pop	r29
 180:	cf 91       	pop	r28
 182:	08 95       	ret

00000184 <vListInsert>:
 184:	cf 93       	push	r28
 186:	df 93       	push	r29
 188:	eb 01       	movw	r28, r22
 18a:	48 81       	ld	r20, Y
 18c:	59 81       	ldd	r21, Y+1	; 0x01
 18e:	4f 3f       	cpi	r20, 0xFF	; 255
 190:	2f ef       	ldi	r18, 0xFF	; 255
 192:	52 07       	cpc	r21, r18
 194:	31 f4       	brne	.+12     	; 0x1a2 <vListInsert+0x1e>
 196:	dc 01       	movw	r26, r24
 198:	17 96       	adiw	r26, 0x07	; 7
 19a:	ed 91       	ld	r30, X+
 19c:	fc 91       	ld	r31, X
 19e:	18 97       	sbiw	r26, 0x08	; 8
 1a0:	17 c0       	rjmp	.+46     	; 0x1d0 <vListInsert+0x4c>
 1a2:	fc 01       	movw	r30, r24
 1a4:	33 96       	adiw	r30, 0x03	; 3
 1a6:	dc 01       	movw	r26, r24
 1a8:	15 96       	adiw	r26, 0x05	; 5
 1aa:	2d 91       	ld	r18, X+
 1ac:	3c 91       	ld	r19, X
 1ae:	16 97       	sbiw	r26, 0x06	; 6
 1b0:	d9 01       	movw	r26, r18
 1b2:	2d 91       	ld	r18, X+
 1b4:	3c 91       	ld	r19, X
 1b6:	42 17       	cp	r20, r18
 1b8:	53 07       	cpc	r21, r19
 1ba:	50 f0       	brcs	.+20     	; 0x1d0 <vListInsert+0x4c>
 1bc:	02 80       	ldd	r0, Z+2	; 0x02
 1be:	f3 81       	ldd	r31, Z+3	; 0x03
 1c0:	e0 2d       	mov	r30, r0
 1c2:	a2 81       	ldd	r26, Z+2	; 0x02
 1c4:	b3 81       	ldd	r27, Z+3	; 0x03
 1c6:	2d 91       	ld	r18, X+
 1c8:	3c 91       	ld	r19, X
 1ca:	42 17       	cp	r20, r18
 1cc:	53 07       	cpc	r21, r19
 1ce:	b0 f7       	brcc	.-20     	; 0x1bc <vListInsert+0x38>
 1d0:	a2 81       	ldd	r26, Z+2	; 0x02
 1d2:	b3 81       	ldd	r27, Z+3	; 0x03
 1d4:	bb 83       	std	Y+3, r27	; 0x03
 1d6:	aa 83       	std	Y+2, r26	; 0x02
 1d8:	15 96       	adiw	r26, 0x05	; 5
 1da:	dc 93       	st	X, r29
 1dc:	ce 93       	st	-X, r28
 1de:	14 97       	sbiw	r26, 0x04	; 4
 1e0:	fd 83       	std	Y+5, r31	; 0x05
 1e2:	ec 83       	std	Y+4, r30	; 0x04
 1e4:	d3 83       	std	Z+3, r29	; 0x03
 1e6:	c2 83       	std	Z+2, r28	; 0x02
 1e8:	99 87       	std	Y+9, r25	; 0x09
 1ea:	88 87       	std	Y+8, r24	; 0x08
 1ec:	fc 01       	movw	r30, r24
 1ee:	20 81       	ld	r18, Z
 1f0:	2f 5f       	subi	r18, 0xFF	; 255
 1f2:	20 83       	st	Z, r18
 1f4:	df 91       	pop	r29
 1f6:	cf 91       	pop	r28
 1f8:	08 95       	ret

000001fa <vListRemove>:
 1fa:	fc 01       	movw	r30, r24
 1fc:	a2 81       	ldd	r26, Z+2	; 0x02
 1fe:	b3 81       	ldd	r27, Z+3	; 0x03
 200:	84 81       	ldd	r24, Z+4	; 0x04
 202:	95 81       	ldd	r25, Z+5	; 0x05
 204:	15 96       	adiw	r26, 0x05	; 5
 206:	9c 93       	st	X, r25
 208:	8e 93       	st	-X, r24
 20a:	14 97       	sbiw	r26, 0x04	; 4
 20c:	a4 81       	ldd	r26, Z+4	; 0x04
 20e:	b5 81       	ldd	r27, Z+5	; 0x05
 210:	82 81       	ldd	r24, Z+2	; 0x02
 212:	93 81       	ldd	r25, Z+3	; 0x03
 214:	13 96       	adiw	r26, 0x03	; 3
 216:	9c 93       	st	X, r25
 218:	8e 93       	st	-X, r24
 21a:	12 97       	sbiw	r26, 0x02	; 2
 21c:	a0 85       	ldd	r26, Z+8	; 0x08
 21e:	b1 85       	ldd	r27, Z+9	; 0x09
 220:	11 96       	adiw	r26, 0x01	; 1
 222:	8d 91       	ld	r24, X+
 224:	9c 91       	ld	r25, X
 226:	12 97       	sbiw	r26, 0x02	; 2
 228:	8e 17       	cp	r24, r30
 22a:	9f 07       	cpc	r25, r31
 22c:	31 f4       	brne	.+12     	; 0x23a <vListRemove+0x40>
 22e:	84 81       	ldd	r24, Z+4	; 0x04
 230:	95 81       	ldd	r25, Z+5	; 0x05
 232:	12 96       	adiw	r26, 0x02	; 2
 234:	9c 93       	st	X, r25
 236:	8e 93       	st	-X, r24
 238:	11 97       	sbiw	r26, 0x01	; 1
 23a:	11 86       	std	Z+9, r1	; 0x09
 23c:	10 86       	std	Z+8, r1	; 0x08
 23e:	8c 91       	ld	r24, X
 240:	81 50       	subi	r24, 0x01	; 1
 242:	8c 93       	st	X, r24
 244:	08 95       	ret

00000246 <delay_ms>:
	}
	else {
		while ( !(UCSR1A & (1 << RXC1)) );
		return UDR1;
	}
}
 246:	18 16       	cp	r1, r24
 248:	19 06       	cpc	r1, r25
 24a:	5c f0       	brlt	.+22     	; 0x262 <delay_ms+0x1c>
 24c:	08 95       	ret
 24e:	00 00       	nop
 250:	21 50       	subi	r18, 0x01	; 1
 252:	31 09       	sbc	r19, r1
 254:	e1 f7       	brne	.-8      	; 0x24e <delay_ms+0x8>
 256:	4f 5f       	subi	r20, 0xFF	; 255
 258:	5f 4f       	sbci	r21, 0xFF	; 255
 25a:	48 17       	cp	r20, r24
 25c:	59 07       	cpc	r21, r25
 25e:	29 f4       	brne	.+10     	; 0x26a <delay_ms+0x24>
 260:	08 95       	ret
 262:	40 e0       	ldi	r20, 0x00	; 0
 264:	50 e0       	ldi	r21, 0x00	; 0
 266:	77 e0       	ldi	r23, 0x07	; 7
 268:	63 e0       	ldi	r22, 0x03	; 3
 26a:	27 2f       	mov	r18, r23
 26c:	36 2f       	mov	r19, r22
 26e:	ef cf       	rjmp	.-34     	; 0x24e <delay_ms+0x8>

00000270 <GetKeypadKey>:
 270:	8e ef       	ldi	r24, 0xFE	; 254
 272:	85 b9       	out	0x05, r24	; 5
 274:	00 00       	nop
 276:	1c 9b       	sbis	0x03, 4	; 3
 278:	29 c0       	rjmp	.+82     	; 0x2cc <GetKeypadKey+0x5c>
 27a:	1d 9b       	sbis	0x03, 5	; 3
 27c:	29 c0       	rjmp	.+82     	; 0x2d0 <GetKeypadKey+0x60>
 27e:	1e 9b       	sbis	0x03, 6	; 3
 280:	29 c0       	rjmp	.+82     	; 0x2d4 <GetKeypadKey+0x64>
 282:	1f 9b       	sbis	0x03, 7	; 3
 284:	29 c0       	rjmp	.+82     	; 0x2d8 <GetKeypadKey+0x68>
 286:	8d ef       	ldi	r24, 0xFD	; 253
 288:	85 b9       	out	0x05, r24	; 5
 28a:	00 00       	nop
 28c:	1c 9b       	sbis	0x03, 4	; 3
 28e:	26 c0       	rjmp	.+76     	; 0x2dc <GetKeypadKey+0x6c>
 290:	1d 9b       	sbis	0x03, 5	; 3
 292:	26 c0       	rjmp	.+76     	; 0x2e0 <GetKeypadKey+0x70>
 294:	1e 9b       	sbis	0x03, 6	; 3
 296:	26 c0       	rjmp	.+76     	; 0x2e4 <GetKeypadKey+0x74>
 298:	1f 9b       	sbis	0x03, 7	; 3
 29a:	26 c0       	rjmp	.+76     	; 0x2e8 <GetKeypadKey+0x78>
 29c:	8b ef       	ldi	r24, 0xFB	; 251
 29e:	85 b9       	out	0x05, r24	; 5
 2a0:	00 00       	nop
 2a2:	1c 9b       	sbis	0x03, 4	; 3
 2a4:	23 c0       	rjmp	.+70     	; 0x2ec <GetKeypadKey+0x7c>
 2a6:	1d 9b       	sbis	0x03, 5	; 3
 2a8:	23 c0       	rjmp	.+70     	; 0x2f0 <GetKeypadKey+0x80>
 2aa:	1e 9b       	sbis	0x03, 6	; 3
 2ac:	23 c0       	rjmp	.+70     	; 0x2f4 <GetKeypadKey+0x84>
 2ae:	1f 9b       	sbis	0x03, 7	; 3
 2b0:	23 c0       	rjmp	.+70     	; 0x2f8 <GetKeypadKey+0x88>
 2b2:	87 ef       	ldi	r24, 0xF7	; 247
 2b4:	85 b9       	out	0x05, r24	; 5
 2b6:	00 00       	nop
 2b8:	1c 9b       	sbis	0x03, 4	; 3
 2ba:	20 c0       	rjmp	.+64     	; 0x2fc <GetKeypadKey+0x8c>
 2bc:	1d 9b       	sbis	0x03, 5	; 3
 2be:	20 c0       	rjmp	.+64     	; 0x300 <GetKeypadKey+0x90>
 2c0:	1e 9b       	sbis	0x03, 6	; 3
 2c2:	20 c0       	rjmp	.+64     	; 0x304 <GetKeypadKey+0x94>
 2c4:	1f 9b       	sbis	0x03, 7	; 3
 2c6:	20 c0       	rjmp	.+64     	; 0x308 <GetKeypadKey+0x98>
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	08 95       	ret
 2cc:	81 e3       	ldi	r24, 0x31	; 49
 2ce:	08 95       	ret
 2d0:	84 e3       	ldi	r24, 0x34	; 52
 2d2:	08 95       	ret
 2d4:	87 e3       	ldi	r24, 0x37	; 55
 2d6:	08 95       	ret
 2d8:	8a e2       	ldi	r24, 0x2A	; 42
 2da:	08 95       	ret
 2dc:	82 e3       	ldi	r24, 0x32	; 50
 2de:	08 95       	ret
 2e0:	85 e3       	ldi	r24, 0x35	; 53
 2e2:	08 95       	ret
 2e4:	88 e3       	ldi	r24, 0x38	; 56
 2e6:	08 95       	ret
 2e8:	80 e3       	ldi	r24, 0x30	; 48
 2ea:	08 95       	ret
 2ec:	83 e3       	ldi	r24, 0x33	; 51
 2ee:	08 95       	ret
 2f0:	86 e3       	ldi	r24, 0x36	; 54
 2f2:	08 95       	ret
 2f4:	89 e3       	ldi	r24, 0x39	; 57
 2f6:	08 95       	ret
 2f8:	83 e2       	ldi	r24, 0x23	; 35
 2fa:	08 95       	ret
 2fc:	81 e4       	ldi	r24, 0x41	; 65
 2fe:	08 95       	ret
 300:	82 e4       	ldi	r24, 0x42	; 66
 302:	08 95       	ret
 304:	83 e4       	ldi	r24, 0x43	; 67
 306:	08 95       	ret
 308:	84 e4       	ldi	r24, 0x44	; 68
 30a:	08 95       	ret

0000030c <GetKeypadKeyOnce>:
 30c:	cf 93       	push	r28
 30e:	b0 df       	rcall	.-160    	; 0x270 <GetKeypadKey>
 310:	c8 2f       	mov	r28, r24
 312:	81 11       	cpse	r24, r1
 314:	03 c0       	rjmp	.+6      	; 0x31c <GetKeypadKeyOnce+0x10>
 316:	10 92 f2 07 	sts	0x07F2, r1	; 0x8007f2 <isPressed>
 31a:	07 c0       	rjmp	.+14     	; 0x32a <GetKeypadKeyOnce+0x1e>
 31c:	80 91 f2 07 	lds	r24, 0x07F2	; 0x8007f2 <isPressed>
 320:	81 11       	cpse	r24, r1
 322:	08 c0       	rjmp	.+16     	; 0x334 <GetKeypadKeyOnce+0x28>
 324:	81 e0       	ldi	r24, 0x01	; 1
 326:	80 93 f2 07 	sts	0x07F2, r24	; 0x8007f2 <isPressed>
 32a:	84 e1       	ldi	r24, 0x14	; 20
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	8b df       	rcall	.-234    	; 0x246 <delay_ms>
 330:	8c 2f       	mov	r24, r28
 332:	01 c0       	rjmp	.+2      	; 0x336 <GetKeypadKeyOnce+0x2a>
 334:	80 e0       	ldi	r24, 0x00	; 0
 336:	cf 91       	pop	r28
 338:	08 95       	ret

0000033a <GetKeypadString>:
 33a:	cf 92       	push	r12
 33c:	df 92       	push	r13
 33e:	ef 92       	push	r14
 340:	ff 92       	push	r15
 342:	1f 93       	push	r17
 344:	cf 93       	push	r28
 346:	df 93       	push	r29
 348:	6c 01       	movw	r12, r24
 34a:	7b 01       	movw	r14, r22
 34c:	67 2b       	or	r22, r23
 34e:	79 f0       	breq	.+30     	; 0x36e <GetKeypadString+0x34>
 350:	c0 e0       	ldi	r28, 0x00	; 0
 352:	d0 e0       	ldi	r29, 0x00	; 0
 354:	10 e0       	ldi	r17, 0x00	; 0
 356:	da df       	rcall	.-76     	; 0x30c <GetKeypadKeyOnce>
 358:	88 23       	and	r24, r24
 35a:	e9 f3       	breq	.-6      	; 0x356 <GetKeypadString+0x1c>
 35c:	cc 0d       	add	r28, r12
 35e:	dd 1d       	adc	r29, r13
 360:	88 83       	st	Y, r24
 362:	1f 5f       	subi	r17, 0xFF	; 255
 364:	c1 2f       	mov	r28, r17
 366:	d0 e0       	ldi	r29, 0x00	; 0
 368:	ce 15       	cp	r28, r14
 36a:	df 05       	cpc	r29, r15
 36c:	a0 f3       	brcs	.-24     	; 0x356 <GetKeypadString+0x1c>
 36e:	f6 01       	movw	r30, r12
 370:	ee 0d       	add	r30, r14
 372:	ff 1d       	adc	r31, r15
 374:	10 82       	st	Z, r1
 376:	df 91       	pop	r29
 378:	cf 91       	pop	r28
 37a:	1f 91       	pop	r17
 37c:	ff 90       	pop	r15
 37e:	ef 90       	pop	r14
 380:	df 90       	pop	r13
 382:	cf 90       	pop	r12
 384:	08 95       	ret

00000386 <checksum>:
 386:	fc 01       	movw	r30, r24
 388:	20 81       	ld	r18, Z
 38a:	02 2e       	mov	r0, r18
 38c:	00 0c       	add	r0, r0
 38e:	33 0b       	sbc	r19, r19
 390:	30 78       	andi	r19, 0x80	; 128
 392:	33 23       	and	r19, r19
 394:	2c f4       	brge	.+10     	; 0x3a0 <checksum+0x1a>
 396:	21 50       	subi	r18, 0x01	; 1
 398:	31 09       	sbc	r19, r1
 39a:	3f 6f       	ori	r19, 0xFF	; 255
 39c:	2f 5f       	subi	r18, 0xFF	; 255
 39e:	3f 4f       	sbci	r19, 0xFF	; 255
 3a0:	d9 01       	movw	r26, r18
 3a2:	a2 5f       	subi	r26, 0xF2	; 242
 3a4:	be 4f       	sbci	r27, 0xFE	; 254
 3a6:	8c 91       	ld	r24, X
 3a8:	62 30       	cpi	r22, 0x02	; 2
 3aa:	71 05       	cpc	r23, r1
 3ac:	78 f0       	brcs	.+30     	; 0x3cc <checksum+0x46>
 3ae:	df 01       	movw	r26, r30
 3b0:	11 96       	adiw	r26, 0x01	; 1
 3b2:	6e 0f       	add	r22, r30
 3b4:	7f 1f       	adc	r23, r31
 3b6:	ed 91       	ld	r30, X+
 3b8:	0e 2e       	mov	r0, r30
 3ba:	00 0c       	add	r0, r0
 3bc:	ff 0b       	sbc	r31, r31
 3be:	e8 27       	eor	r30, r24
 3c0:	e2 5f       	subi	r30, 0xF2	; 242
 3c2:	fe 4f       	sbci	r31, 0xFE	; 254
 3c4:	80 81       	ld	r24, Z
 3c6:	a6 17       	cp	r26, r22
 3c8:	b7 07       	cpc	r27, r23
 3ca:	a9 f7       	brne	.-22     	; 0x3b6 <checksum+0x30>
 3cc:	08 95       	ret

000003ce <initUSART>:
 3ce:	81 30       	cpi	r24, 0x01	; 1
 3d0:	89 f0       	breq	.+34     	; 0x3f4 <initUSART+0x26>
 3d2:	e1 ec       	ldi	r30, 0xC1	; 193
 3d4:	f0 e0       	ldi	r31, 0x00	; 0
 3d6:	80 81       	ld	r24, Z
 3d8:	88 61       	ori	r24, 0x18	; 24
 3da:	80 83       	st	Z, r24
 3dc:	e2 ec       	ldi	r30, 0xC2	; 194
 3de:	f0 e0       	ldi	r31, 0x00	; 0
 3e0:	80 81       	ld	r24, Z
 3e2:	86 60       	ori	r24, 0x06	; 6
 3e4:	80 83       	st	Z, r24
 3e6:	81 e8       	ldi	r24, 0x81	; 129
 3e8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 3ec:	86 e0       	ldi	r24, 0x06	; 6
 3ee:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 3f2:	08 95       	ret
 3f4:	e9 ec       	ldi	r30, 0xC9	; 201
 3f6:	f0 e0       	ldi	r31, 0x00	; 0
 3f8:	80 81       	ld	r24, Z
 3fa:	88 61       	ori	r24, 0x18	; 24
 3fc:	80 83       	st	Z, r24
 3fe:	ea ec       	ldi	r30, 0xCA	; 202
 400:	f0 e0       	ldi	r31, 0x00	; 0
 402:	80 81       	ld	r24, Z
 404:	86 60       	ori	r24, 0x06	; 6
 406:	80 83       	st	Z, r24
 408:	81 e8       	ldi	r24, 0x81	; 129
 40a:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
 40e:	86 e0       	ldi	r24, 0x06	; 6
 410:	80 93 cd 00 	sts	0x00CD, r24	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
 414:	08 95       	ret

00000416 <USART_IsSendReady>:
 416:	81 30       	cpi	r24, 0x01	; 1
 418:	21 f0       	breq	.+8      	; 0x422 <USART_IsSendReady+0xc>
 41a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 41e:	80 72       	andi	r24, 0x20	; 32
 420:	08 95       	ret
 422:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
 426:	80 72       	andi	r24, 0x20	; 32
 428:	08 95       	ret

0000042a <USART_HasTransmitted>:
 42a:	81 30       	cpi	r24, 0x01	; 1
 42c:	21 f0       	breq	.+8      	; 0x436 <USART_HasTransmitted+0xc>
 42e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 432:	80 74       	andi	r24, 0x40	; 64
 434:	08 95       	ret
 436:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
 43a:	80 74       	andi	r24, 0x40	; 64
 43c:	08 95       	ret

0000043e <USART_Send>:
 43e:	61 30       	cpi	r22, 0x01	; 1
 440:	41 f0       	breq	.+16     	; 0x452 <USART_Send+0x14>
 442:	e0 ec       	ldi	r30, 0xC0	; 192
 444:	f0 e0       	ldi	r31, 0x00	; 0
 446:	90 81       	ld	r25, Z
 448:	95 ff       	sbrs	r25, 5
 44a:	fd cf       	rjmp	.-6      	; 0x446 <USART_Send+0x8>
 44c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 450:	08 95       	ret
 452:	e8 ec       	ldi	r30, 0xC8	; 200
 454:	f0 e0       	ldi	r31, 0x00	; 0
 456:	90 81       	ld	r25, Z
 458:	95 ff       	sbrs	r25, 5
 45a:	fd cf       	rjmp	.-6      	; 0x456 <USART_Send+0x18>
 45c:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
 460:	08 95       	ret

00000462 <rf_send>:
 */ 
#include "check.h"
#include "delay.h"
#include "usart_ATmega1284.h"

void rf_send(char * message, char length, char port){
 462:	df 92       	push	r13
 464:	ef 92       	push	r14
 466:	ff 92       	push	r15
 468:	0f 93       	push	r16
 46a:	1f 93       	push	r17
 46c:	cf 93       	push	r28
 46e:	df 93       	push	r29
 470:	8c 01       	movw	r16, r24
 472:	d6 2e       	mov	r13, r22
		while (!USART_IsSendReady(port));
 474:	d4 2f       	mov	r29, r20
 476:	cd 2f       	mov	r28, r29
 478:	8d 2f       	mov	r24, r29
 47a:	cd df       	rcall	.-102    	; 0x416 <USART_IsSendReady>
 47c:	88 23       	and	r24, r24
 47e:	d9 f3       	breq	.-10     	; 0x476 <rf_send+0x14>
		USART_Send(0xAA, port);
 480:	6d 2f       	mov	r22, r29
 482:	8a ea       	ldi	r24, 0xAA	; 170
 484:	dc df       	rcall	.-72     	; 0x43e <USART_Send>
		while (!USART_HasTransmitted(port));
 486:	8c 2f       	mov	r24, r28
 488:	d0 df       	rcall	.-96     	; 0x42a <USART_HasTransmitted>
 48a:	88 23       	and	r24, r24
 48c:	e1 f3       	breq	.-8      	; 0x486 <rf_send+0x24>
		
		while (!USART_IsSendReady(port));
 48e:	8c 2f       	mov	r24, r28
 490:	c2 df       	rcall	.-124    	; 0x416 <USART_IsSendReady>
 492:	88 23       	and	r24, r24
 494:	e1 f3       	breq	.-8      	; 0x48e <rf_send+0x2c>
		USART_Send(length, port);
 496:	6c 2f       	mov	r22, r28
 498:	8d 2d       	mov	r24, r13
 49a:	d1 df       	rcall	.-94     	; 0x43e <USART_Send>
		while (!USART_HasTransmitted(port));
 49c:	8c 2f       	mov	r24, r28
 49e:	c5 df       	rcall	.-118    	; 0x42a <USART_HasTransmitted>
 4a0:	88 23       	and	r24, r24
 4a2:	e1 f3       	breq	.-8      	; 0x49c <rf_send+0x3a>

		for (uint8_t i = 0; i < length; i++){
 4a4:	ed 2c       	mov	r14, r13
 4a6:	0d 2c       	mov	r0, r13
 4a8:	00 0c       	add	r0, r0
 4aa:	ff 08       	sbc	r15, r15
 4ac:	1e 14       	cp	r1, r14
 4ae:	1f 04       	cpc	r1, r15
 4b0:	ac f4       	brge	.+42     	; 0x4dc <rf_send+0x7a>
 4b2:	d0 e0       	ldi	r29, 0x00	; 0
			while (!USART_IsSendReady(port));
 4b4:	8c 2f       	mov	r24, r28
 4b6:	af df       	rcall	.-162    	; 0x416 <USART_IsSendReady>
 4b8:	88 23       	and	r24, r24
 4ba:	e1 f3       	breq	.-8      	; 0x4b4 <rf_send+0x52>
			USART_Send(message[i], port);
 4bc:	6c 2f       	mov	r22, r28
 4be:	f8 01       	movw	r30, r16
 4c0:	ed 0f       	add	r30, r29
 4c2:	f1 1d       	adc	r31, r1
 4c4:	80 81       	ld	r24, Z
 4c6:	bb df       	rcall	.-138    	; 0x43e <USART_Send>
			while (!USART_HasTransmitted(port));
 4c8:	8c 2f       	mov	r24, r28
 4ca:	af df       	rcall	.-162    	; 0x42a <USART_HasTransmitted>
 4cc:	88 23       	and	r24, r24
 4ce:	e1 f3       	breq	.-8      	; 0x4c8 <rf_send+0x66>
		
		while (!USART_IsSendReady(port));
		USART_Send(length, port);
		while (!USART_HasTransmitted(port));

		for (uint8_t i = 0; i < length; i++){
 4d0:	df 5f       	subi	r29, 0xFF	; 255
 4d2:	2d 2f       	mov	r18, r29
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	2e 15       	cp	r18, r14
 4d8:	3f 05       	cpc	r19, r15
 4da:	64 f3       	brlt	.-40     	; 0x4b4 <rf_send+0x52>
			while (!USART_IsSendReady(port));
			USART_Send(message[i], port);
			while (!USART_HasTransmitted(port));
		}
		
		while (!USART_IsSendReady(port));
 4dc:	8c 2f       	mov	r24, r28
 4de:	9b df       	rcall	.-202    	; 0x416 <USART_IsSendReady>
 4e0:	88 23       	and	r24, r24
 4e2:	e1 f3       	breq	.-8      	; 0x4dc <rf_send+0x7a>
		USART_Send(checksum(message, length), port);
 4e4:	6d 2d       	mov	r22, r13
 4e6:	dd 0c       	add	r13, r13
 4e8:	77 0b       	sbc	r23, r23
 4ea:	c8 01       	movw	r24, r16
 4ec:	4c df       	rcall	.-360    	; 0x386 <checksum>
 4ee:	6c 2f       	mov	r22, r28
 4f0:	a6 df       	rcall	.-180    	; 0x43e <USART_Send>
		while (!USART_HasTransmitted(port));
 4f2:	8c 2f       	mov	r24, r28
 4f4:	9a df       	rcall	.-204    	; 0x42a <USART_HasTransmitted>
 4f6:	88 23       	and	r24, r24
 4f8:	e1 f3       	breq	.-8      	; 0x4f2 <rf_send+0x90>

 4fa:	df 91       	pop	r29
 4fc:	cf 91       	pop	r28
 4fe:	1f 91       	pop	r17
 500:	0f 91       	pop	r16
 502:	ff 90       	pop	r15
 504:	ef 90       	pop	r14
 506:	df 90       	pop	r13
 508:	08 95       	ret

0000050a <Demo_Init>:

#define CODE_SIZE 4

void Demo_Init()
{
	initUSART(0);
 50a:	80 e0       	ldi	r24, 0x00	; 0
 50c:	60 df       	rcall	.-320    	; 0x3ce <initUSART>
	DDRB = 0x0F; PORTB = 0xF0;
 50e:	8f e0       	ldi	r24, 0x0F	; 15
 510:	84 b9       	out	0x04, r24	; 4
 512:	80 ef       	ldi	r24, 0xF0	; 240
 514:	85 b9       	out	0x05, r24	; 5
	DDRC = 0xFF;
 516:	8f ef       	ldi	r24, 0xFF	; 255
 518:	87 b9       	out	0x07, r24	; 7
 51a:	08 95       	ret

0000051c <Demo_Tick>:
}

void Demo_Tick()
{	
 51c:	1f 93       	push	r17
 51e:	cf 93       	push	r28
 520:	df 93       	push	r29
 522:	cd b7       	in	r28, 0x3d	; 61
 524:	de b7       	in	r29, 0x3e	; 62
 526:	65 97       	sbiw	r28, 0x15	; 21
 528:	0f b6       	in	r0, 0x3f	; 63
 52a:	f8 94       	cli
 52c:	de bf       	out	0x3e, r29	; 62
 52e:	0f be       	out	0x3f, r0	; 63
 530:	cd bf       	out	0x3d, r28	; 61
	PORTC = 0x00;
 532:	18 b8       	out	0x08, r1	; 8
	unsigned char keycode[20];	
	unsigned char firstKey = '\0';
 534:	1d 8a       	std	Y+21, r1	; 0x15
	
	while (firstKey == '\0')
		firstKey = GetKeypadKeyOnce();
 536:	ea de       	rcall	.-556    	; 0x30c <GetKeypadKeyOnce>
 538:	8d 8b       	std	Y+21, r24	; 0x15
{	
	PORTC = 0x00;
	unsigned char keycode[20];	
	unsigned char firstKey = '\0';
	
	while (firstKey == '\0')
 53a:	88 23       	and	r24, r24
 53c:	e1 f3       	breq	.-8      	; 0x536 <Demo_Tick+0x1a>
		firstKey = GetKeypadKeyOnce();
		
	if (firstKey == '*' || firstKey == '#'){
 53e:	8a 32       	cpi	r24, 0x2A	; 42
 540:	21 f0       	breq	.+8      	; 0x54a <Demo_Tick+0x2e>
 542:	83 32       	cpi	r24, 0x23	; 35
 544:	69 f4       	brne	.+26     	; 0x560 <Demo_Tick+0x44>
 546:	16 e0       	ldi	r17, 0x06	; 6
 548:	01 c0       	rjmp	.+2      	; 0x54c <Demo_Tick+0x30>
 54a:	16 e0       	ldi	r17, 0x06	; 6
		for (char i = 0; i < 6; i++){
			rf_send(&firstKey, 1, 0);
 54c:	40 e0       	ldi	r20, 0x00	; 0
 54e:	61 e0       	ldi	r22, 0x01	; 1
 550:	ce 01       	movw	r24, r28
 552:	45 96       	adiw	r24, 0x15	; 21
 554:	86 df       	rcall	.-244    	; 0x462 <rf_send>
 556:	11 50       	subi	r17, 0x01	; 1
	
	while (firstKey == '\0')
		firstKey = GetKeypadKeyOnce();
		
	if (firstKey == '*' || firstKey == '#'){
		for (char i = 0; i < 6; i++){
 558:	c9 f7       	brne	.-14     	; 0x54c <Demo_Tick+0x30>
			rf_send(&firstKey, 1, 0);
		}
		
		PORTC = 0xFF;
 55a:	8f ef       	ldi	r24, 0xFF	; 255
 55c:	88 b9       	out	0x08, r24	; 8
 55e:	14 c0       	rjmp	.+40     	; 0x588 <Demo_Tick+0x6c>
		return;
	}

	keycode[0] = firstKey;
 560:	89 83       	std	Y+1, r24	; 0x01
	GetKeypadString(&keycode[1], CODE_SIZE-1);
 562:	63 e0       	ldi	r22, 0x03	; 3
 564:	70 e0       	ldi	r23, 0x00	; 0
 566:	ce 01       	movw	r24, r28
 568:	02 96       	adiw	r24, 0x02	; 2
 56a:	e7 de       	rcall	.-562    	; 0x33a <GetKeypadString>
	keycode[CODE_SIZE] = '\0';
 56c:	1d 82       	std	Y+5, r1	; 0x05
 56e:	16 e0       	ldi	r17, 0x06	; 6
	
	for (char i = 0; i < 6; i++){
		rf_send(keycode, 4, 0);
 570:	40 e0       	ldi	r20, 0x00	; 0
 572:	64 e0       	ldi	r22, 0x04	; 4
 574:	ce 01       	movw	r24, r28
 576:	01 96       	adiw	r24, 0x01	; 1
 578:	74 df       	rcall	.-280    	; 0x462 <rf_send>
		delay_ms(250);
 57a:	8a ef       	ldi	r24, 0xFA	; 250
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	63 de       	rcall	.-826    	; 0x246 <delay_ms>
 580:	11 50       	subi	r17, 0x01	; 1

	keycode[0] = firstKey;
	GetKeypadString(&keycode[1], CODE_SIZE-1);
	keycode[CODE_SIZE] = '\0';
	
	for (char i = 0; i < 6; i++){
 582:	b1 f7       	brne	.-20     	; 0x570 <Demo_Tick+0x54>
		rf_send(keycode, 4, 0);
		delay_ms(250);
	}
	
	PORTC = 0xFF;
 584:	8f ef       	ldi	r24, 0xFF	; 255
 586:	88 b9       	out	0x08, r24	; 8
}
 588:	65 96       	adiw	r28, 0x15	; 21
 58a:	0f b6       	in	r0, 0x3f	; 63
 58c:	f8 94       	cli
 58e:	de bf       	out	0x3e, r29	; 62
 590:	0f be       	out	0x3f, r0	; 63
 592:	cd bf       	out	0x3d, r28	; 61
 594:	df 91       	pop	r29
 596:	cf 91       	pop	r28
 598:	1f 91       	pop	r17
 59a:	08 95       	ret

0000059c <DemoSecTask>:

void DemoSecTask()
{
	Demo_Init();
 59c:	b6 df       	rcall	.-148    	; 0x50a <Demo_Init>
	for (;;)
	{
		Demo_Tick();
 59e:	be df       	rcall	.-132    	; 0x51c <Demo_Tick>
		vTaskDelay(250);
 5a0:	8a ef       	ldi	r24, 0xFA	; 250
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	bf d2       	rcall	.+1406   	; 0xb24 <vTaskDelay>
	}
 5a6:	fb cf       	rjmp	.-10     	; 0x59e <DemoSecTask+0x2>

000005a8 <StartSecPulse>:
}

void StartSecPulse(unsigned portBASE_TYPE Priority)
{
 5a8:	af 92       	push	r10
 5aa:	bf 92       	push	r11
 5ac:	cf 92       	push	r12
 5ae:	df 92       	push	r13
 5b0:	ef 92       	push	r14
 5b2:	ff 92       	push	r15
 5b4:	0f 93       	push	r16
	xTaskCreate(DemoSecTask, (signed portCHAR *)"DemoSecTask", configMINIMAL_STACK_SIZE, NULL, Priority, NULL );
 5b6:	a1 2c       	mov	r10, r1
 5b8:	b1 2c       	mov	r11, r1
 5ba:	c1 2c       	mov	r12, r1
 5bc:	d1 2c       	mov	r13, r1
 5be:	e1 2c       	mov	r14, r1
 5c0:	f1 2c       	mov	r15, r1
 5c2:	08 2f       	mov	r16, r24
 5c4:	20 e0       	ldi	r18, 0x00	; 0
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	45 e5       	ldi	r20, 0x55	; 85
 5ca:	50 e0       	ldi	r21, 0x00	; 0
 5cc:	62 e0       	ldi	r22, 0x02	; 2
 5ce:	71 e0       	ldi	r23, 0x01	; 1
 5d0:	8e ec       	ldi	r24, 0xCE	; 206
 5d2:	92 e0       	ldi	r25, 0x02	; 2
 5d4:	43 d0       	rcall	.+134    	; 0x65c <xTaskGenericCreate>
}
 5d6:	0f 91       	pop	r16
 5d8:	ff 90       	pop	r15
 5da:	ef 90       	pop	r14
 5dc:	df 90       	pop	r13
 5de:	cf 90       	pop	r12
 5e0:	bf 90       	pop	r11
 5e2:	af 90       	pop	r10
 5e4:	08 95       	ret

000005e6 <main>:
 
int main(void) 
{ 
   //Start Tasks  
   StartSecPulse(1);
 5e6:	81 e0       	ldi	r24, 0x01	; 1
 5e8:	df df       	rcall	.-66     	; 0x5a8 <StartSecPulse>
   //Run Scheduler 
   vTaskStartScheduler(); 
 5ea:	2b d1       	rcall	.+598    	; 0x842 <vTaskStartScheduler>
   return 0; 
 5ec:	80 e0       	ldi	r24, 0x00	; 0
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	08 95       	ret

000005f2 <prvAddCurrentTaskToDelayedList>:
 5f2:	cf 93       	push	r28
 5f4:	df 93       	push	r29
 5f6:	ec 01       	movw	r28, r24
 5f8:	e0 91 4b 08 	lds	r30, 0x084B	; 0x80084b <pxCurrentTCB>
 5fc:	f0 91 4c 08 	lds	r31, 0x084C	; 0x80084c <pxCurrentTCB+0x1>
 600:	93 83       	std	Z+3, r25	; 0x03
 602:	82 83       	std	Z+2, r24	; 0x02
 604:	80 91 fb 07 	lds	r24, 0x07FB	; 0x8007fb <xTickCount>
 608:	90 91 fc 07 	lds	r25, 0x07FC	; 0x8007fc <xTickCount+0x1>
 60c:	c8 17       	cp	r28, r24
 60e:	d9 07       	cpc	r29, r25
 610:	60 f4       	brcc	.+24     	; 0x62a <prvAddCurrentTaskToDelayedList+0x38>
 612:	60 91 4b 08 	lds	r22, 0x084B	; 0x80084b <pxCurrentTCB>
 616:	70 91 4c 08 	lds	r23, 0x084C	; 0x80084c <pxCurrentTCB+0x1>
 61a:	80 91 11 08 	lds	r24, 0x0811	; 0x800811 <pxOverflowDelayedTaskList>
 61e:	90 91 12 08 	lds	r25, 0x0812	; 0x800812 <pxOverflowDelayedTaskList+0x1>
 622:	6e 5f       	subi	r22, 0xFE	; 254
 624:	7f 4f       	sbci	r23, 0xFF	; 255
 626:	ae dd       	rcall	.-1188   	; 0x184 <vListInsert>
 628:	16 c0       	rjmp	.+44     	; 0x656 <prvAddCurrentTaskToDelayedList+0x64>
 62a:	60 91 4b 08 	lds	r22, 0x084B	; 0x80084b <pxCurrentTCB>
 62e:	70 91 4c 08 	lds	r23, 0x084C	; 0x80084c <pxCurrentTCB+0x1>
 632:	80 91 13 08 	lds	r24, 0x0813	; 0x800813 <pxDelayedTaskList>
 636:	90 91 14 08 	lds	r25, 0x0814	; 0x800814 <pxDelayedTaskList+0x1>
 63a:	6e 5f       	subi	r22, 0xFE	; 254
 63c:	7f 4f       	sbci	r23, 0xFF	; 255
 63e:	a2 dd       	rcall	.-1212   	; 0x184 <vListInsert>
 640:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 644:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 648:	c8 17       	cp	r28, r24
 64a:	d9 07       	cpc	r29, r25
 64c:	20 f4       	brcc	.+8      	; 0x656 <prvAddCurrentTaskToDelayedList+0x64>
 64e:	d0 93 01 01 	sts	0x0101, r29	; 0x800101 <__data_start+0x1>
 652:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__data_start>
 656:	df 91       	pop	r29
 658:	cf 91       	pop	r28
 65a:	08 95       	ret

0000065c <xTaskGenericCreate>:
 65c:	4f 92       	push	r4
 65e:	5f 92       	push	r5
 660:	6f 92       	push	r6
 662:	7f 92       	push	r7
 664:	8f 92       	push	r8
 666:	9f 92       	push	r9
 668:	af 92       	push	r10
 66a:	bf 92       	push	r11
 66c:	cf 92       	push	r12
 66e:	df 92       	push	r13
 670:	ef 92       	push	r14
 672:	ff 92       	push	r15
 674:	0f 93       	push	r16
 676:	1f 93       	push	r17
 678:	cf 93       	push	r28
 67a:	df 93       	push	r29
 67c:	5c 01       	movw	r10, r24
 67e:	4b 01       	movw	r8, r22
 680:	3a 01       	movw	r6, r20
 682:	29 01       	movw	r4, r18
 684:	81 e2       	ldi	r24, 0x21	; 33
 686:	90 e0       	ldi	r25, 0x00	; 0
 688:	1f dd       	rcall	.-1474   	; 0xc8 <pvPortMalloc>
 68a:	ec 01       	movw	r28, r24
 68c:	89 2b       	or	r24, r25
 68e:	09 f4       	brne	.+2      	; 0x692 <xTaskGenericCreate+0x36>
 690:	c6 c0       	rjmp	.+396    	; 0x81e <xTaskGenericCreate+0x1c2>
 692:	c1 14       	cp	r12, r1
 694:	d1 04       	cpc	r13, r1
 696:	09 f0       	breq	.+2      	; 0x69a <xTaskGenericCreate+0x3e>
 698:	be c0       	rjmp	.+380    	; 0x816 <xTaskGenericCreate+0x1ba>
 69a:	c3 01       	movw	r24, r6
 69c:	15 dd       	rcall	.-1494   	; 0xc8 <pvPortMalloc>
 69e:	98 8f       	std	Y+24, r25	; 0x18
 6a0:	8f 8b       	std	Y+23, r24	; 0x17
 6a2:	00 97       	sbiw	r24, 0x00	; 0
 6a4:	19 f4       	brne	.+6      	; 0x6ac <xTaskGenericCreate+0x50>
 6a6:	ce 01       	movw	r24, r28
 6a8:	33 dd       	rcall	.-1434   	; 0x110 <vPortFree>
 6aa:	b9 c0       	rjmp	.+370    	; 0x81e <xTaskGenericCreate+0x1c2>
 6ac:	a3 01       	movw	r20, r6
 6ae:	65 ea       	ldi	r22, 0xA5	; 165
 6b0:	70 e0       	ldi	r23, 0x00	; 0
 6b2:	4e d4       	rcall	.+2204   	; 0xf50 <memset>
 6b4:	93 01       	movw	r18, r6
 6b6:	21 50       	subi	r18, 0x01	; 1
 6b8:	31 09       	sbc	r19, r1
 6ba:	8f 89       	ldd	r24, Y+23	; 0x17
 6bc:	98 8d       	ldd	r25, Y+24	; 0x18
 6be:	3c 01       	movw	r6, r24
 6c0:	62 0e       	add	r6, r18
 6c2:	73 1e       	adc	r7, r19
 6c4:	48 e0       	ldi	r20, 0x08	; 8
 6c6:	50 e0       	ldi	r21, 0x00	; 0
 6c8:	b4 01       	movw	r22, r8
 6ca:	ce 01       	movw	r24, r28
 6cc:	49 96       	adiw	r24, 0x19	; 25
 6ce:	47 d4       	rcall	.+2190   	; 0xf5e <strncpy>
 6d0:	18 a2       	std	Y+32, r1	; 0x20
 6d2:	10 2f       	mov	r17, r16
 6d4:	04 30       	cpi	r16, 0x04	; 4
 6d6:	08 f0       	brcs	.+2      	; 0x6da <xTaskGenericCreate+0x7e>
 6d8:	13 e0       	ldi	r17, 0x03	; 3
 6da:	1e 8b       	std	Y+22, r17	; 0x16
 6dc:	6e 01       	movw	r12, r28
 6de:	82 e0       	ldi	r24, 0x02	; 2
 6e0:	c8 0e       	add	r12, r24
 6e2:	d1 1c       	adc	r13, r1
 6e4:	c6 01       	movw	r24, r12
 6e6:	23 dd       	rcall	.-1466   	; 0x12e <vListInitialiseItem>
 6e8:	ce 01       	movw	r24, r28
 6ea:	0c 96       	adiw	r24, 0x0c	; 12
 6ec:	20 dd       	rcall	.-1472   	; 0x12e <vListInitialiseItem>
 6ee:	d9 87       	std	Y+9, r29	; 0x09
 6f0:	c8 87       	std	Y+8, r28	; 0x08
 6f2:	84 e0       	ldi	r24, 0x04	; 4
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	81 1b       	sub	r24, r17
 6f8:	91 09       	sbc	r25, r1
 6fa:	9d 87       	std	Y+13, r25	; 0x0d
 6fc:	8c 87       	std	Y+12, r24	; 0x0c
 6fe:	db 8b       	std	Y+19, r29	; 0x13
 700:	ca 8b       	std	Y+18, r28	; 0x12
 702:	a2 01       	movw	r20, r4
 704:	b5 01       	movw	r22, r10
 706:	c3 01       	movw	r24, r6
 708:	ca d2       	rcall	.+1428   	; 0xc9e <pxPortInitialiseStack>
 70a:	99 83       	std	Y+1, r25	; 0x01
 70c:	88 83       	st	Y, r24
 70e:	e1 14       	cp	r14, r1
 710:	f1 04       	cpc	r15, r1
 712:	19 f0       	breq	.+6      	; 0x71a <xTaskGenericCreate+0xbe>
 714:	f7 01       	movw	r30, r14
 716:	d1 83       	std	Z+1, r29	; 0x01
 718:	c0 83       	st	Z, r28
 71a:	0f b6       	in	r0, 0x3f	; 63
 71c:	f8 94       	cli
 71e:	0f 92       	push	r0
 720:	80 91 fd 07 	lds	r24, 0x07FD	; 0x8007fd <uxCurrentNumberOfTasks>
 724:	8f 5f       	subi	r24, 0xFF	; 255
 726:	80 93 fd 07 	sts	0x07FD, r24	; 0x8007fd <uxCurrentNumberOfTasks>
 72a:	80 91 4b 08 	lds	r24, 0x084B	; 0x80084b <pxCurrentTCB>
 72e:	90 91 4c 08 	lds	r25, 0x084C	; 0x80084c <pxCurrentTCB+0x1>
 732:	89 2b       	or	r24, r25
 734:	69 f5       	brne	.+90     	; 0x790 <xTaskGenericCreate+0x134>
 736:	d0 93 4c 08 	sts	0x084C, r29	; 0x80084c <pxCurrentTCB+0x1>
 73a:	c0 93 4b 08 	sts	0x084B, r28	; 0x80084b <pxCurrentTCB>
 73e:	80 91 fd 07 	lds	r24, 0x07FD	; 0x8007fd <uxCurrentNumberOfTasks>
 742:	81 30       	cpi	r24, 0x01	; 1
 744:	a1 f5       	brne	.+104    	; 0x7ae <xTaskGenericCreate+0x152>
 746:	87 e2       	ldi	r24, 0x27	; 39
 748:	98 e0       	ldi	r25, 0x08	; 8
 74a:	e3 dc       	rcall	.-1594   	; 0x112 <vListInitialise>
 74c:	80 e3       	ldi	r24, 0x30	; 48
 74e:	98 e0       	ldi	r25, 0x08	; 8
 750:	e0 dc       	rcall	.-1600   	; 0x112 <vListInitialise>
 752:	89 e3       	ldi	r24, 0x39	; 57
 754:	98 e0       	ldi	r25, 0x08	; 8
 756:	dd dc       	rcall	.-1606   	; 0x112 <vListInitialise>
 758:	82 e4       	ldi	r24, 0x42	; 66
 75a:	98 e0       	ldi	r25, 0x08	; 8
 75c:	da dc       	rcall	.-1612   	; 0x112 <vListInitialise>
 75e:	8e e1       	ldi	r24, 0x1E	; 30
 760:	98 e0       	ldi	r25, 0x08	; 8
 762:	d7 dc       	rcall	.-1618   	; 0x112 <vListInitialise>
 764:	85 e1       	ldi	r24, 0x15	; 21
 766:	98 e0       	ldi	r25, 0x08	; 8
 768:	d4 dc       	rcall	.-1624   	; 0x112 <vListInitialise>
 76a:	88 e0       	ldi	r24, 0x08	; 8
 76c:	98 e0       	ldi	r25, 0x08	; 8
 76e:	d1 dc       	rcall	.-1630   	; 0x112 <vListInitialise>
 770:	8f ef       	ldi	r24, 0xFF	; 255
 772:	97 e0       	ldi	r25, 0x07	; 7
 774:	ce dc       	rcall	.-1636   	; 0x112 <vListInitialise>
 776:	8e e1       	ldi	r24, 0x1E	; 30
 778:	98 e0       	ldi	r25, 0x08	; 8
 77a:	90 93 14 08 	sts	0x0814, r25	; 0x800814 <pxDelayedTaskList+0x1>
 77e:	80 93 13 08 	sts	0x0813, r24	; 0x800813 <pxDelayedTaskList>
 782:	85 e1       	ldi	r24, 0x15	; 21
 784:	98 e0       	ldi	r25, 0x08	; 8
 786:	90 93 12 08 	sts	0x0812, r25	; 0x800812 <pxOverflowDelayedTaskList+0x1>
 78a:	80 93 11 08 	sts	0x0811, r24	; 0x800811 <pxOverflowDelayedTaskList>
 78e:	0f c0       	rjmp	.+30     	; 0x7ae <xTaskGenericCreate+0x152>
 790:	80 91 f8 07 	lds	r24, 0x07F8	; 0x8007f8 <xSchedulerRunning>
 794:	81 11       	cpse	r24, r1
 796:	0b c0       	rjmp	.+22     	; 0x7ae <xTaskGenericCreate+0x152>
 798:	e0 91 4b 08 	lds	r30, 0x084B	; 0x80084b <pxCurrentTCB>
 79c:	f0 91 4c 08 	lds	r31, 0x084C	; 0x80084c <pxCurrentTCB+0x1>
 7a0:	86 89       	ldd	r24, Z+22	; 0x16
 7a2:	08 17       	cp	r16, r24
 7a4:	20 f0       	brcs	.+8      	; 0x7ae <xTaskGenericCreate+0x152>
 7a6:	d0 93 4c 08 	sts	0x084C, r29	; 0x80084c <pxCurrentTCB+0x1>
 7aa:	c0 93 4b 08 	sts	0x084B, r28	; 0x80084b <pxCurrentTCB>
 7ae:	8e 89       	ldd	r24, Y+22	; 0x16
 7b0:	90 91 fa 07 	lds	r25, 0x07FA	; 0x8007fa <uxTopUsedPriority>
 7b4:	98 17       	cp	r25, r24
 7b6:	10 f4       	brcc	.+4      	; 0x7bc <xTaskGenericCreate+0x160>
 7b8:	80 93 fa 07 	sts	0x07FA, r24	; 0x8007fa <uxTopUsedPriority>
 7bc:	90 91 f3 07 	lds	r25, 0x07F3	; 0x8007f3 <uxTaskNumber>
 7c0:	9f 5f       	subi	r25, 0xFF	; 255
 7c2:	90 93 f3 07 	sts	0x07F3, r25	; 0x8007f3 <uxTaskNumber>
 7c6:	90 91 f9 07 	lds	r25, 0x07F9	; 0x8007f9 <uxTopReadyPriority>
 7ca:	98 17       	cp	r25, r24
 7cc:	10 f4       	brcc	.+4      	; 0x7d2 <xTaskGenericCreate+0x176>
 7ce:	80 93 f9 07 	sts	0x07F9, r24	; 0x8007f9 <uxTopReadyPriority>
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	9c 01       	movw	r18, r24
 7d6:	22 0f       	add	r18, r18
 7d8:	33 1f       	adc	r19, r19
 7da:	22 0f       	add	r18, r18
 7dc:	33 1f       	adc	r19, r19
 7de:	22 0f       	add	r18, r18
 7e0:	33 1f       	adc	r19, r19
 7e2:	82 0f       	add	r24, r18
 7e4:	93 1f       	adc	r25, r19
 7e6:	b6 01       	movw	r22, r12
 7e8:	89 5d       	subi	r24, 0xD9	; 217
 7ea:	97 4f       	sbci	r25, 0xF7	; 247
 7ec:	a4 dc       	rcall	.-1720   	; 0x136 <vListInsertEnd>
 7ee:	0f 90       	pop	r0
 7f0:	0f be       	out	0x3f, r0	; 63
 7f2:	80 91 f8 07 	lds	r24, 0x07F8	; 0x8007f8 <xSchedulerRunning>
 7f6:	88 23       	and	r24, r24
 7f8:	51 f0       	breq	.+20     	; 0x80e <xTaskGenericCreate+0x1b2>
 7fa:	e0 91 4b 08 	lds	r30, 0x084B	; 0x80084b <pxCurrentTCB>
 7fe:	f0 91 4c 08 	lds	r31, 0x084C	; 0x80084c <pxCurrentTCB+0x1>
 802:	86 89       	ldd	r24, Z+22	; 0x16
 804:	80 17       	cp	r24, r16
 806:	28 f4       	brcc	.+10     	; 0x812 <xTaskGenericCreate+0x1b6>
 808:	f0 d2       	rcall	.+1504   	; 0xdea <vPortYield>
 80a:	81 e0       	ldi	r24, 0x01	; 1
 80c:	09 c0       	rjmp	.+18     	; 0x820 <xTaskGenericCreate+0x1c4>
 80e:	81 e0       	ldi	r24, 0x01	; 1
 810:	07 c0       	rjmp	.+14     	; 0x820 <xTaskGenericCreate+0x1c4>
 812:	81 e0       	ldi	r24, 0x01	; 1
 814:	05 c0       	rjmp	.+10     	; 0x820 <xTaskGenericCreate+0x1c4>
 816:	d8 8e       	std	Y+24, r13	; 0x18
 818:	cf 8a       	std	Y+23, r12	; 0x17
 81a:	c6 01       	movw	r24, r12
 81c:	47 cf       	rjmp	.-370    	; 0x6ac <xTaskGenericCreate+0x50>
 81e:	8f ef       	ldi	r24, 0xFF	; 255
 820:	df 91       	pop	r29
 822:	cf 91       	pop	r28
 824:	1f 91       	pop	r17
 826:	0f 91       	pop	r16
 828:	ff 90       	pop	r15
 82a:	ef 90       	pop	r14
 82c:	df 90       	pop	r13
 82e:	cf 90       	pop	r12
 830:	bf 90       	pop	r11
 832:	af 90       	pop	r10
 834:	9f 90       	pop	r9
 836:	8f 90       	pop	r8
 838:	7f 90       	pop	r7
 83a:	6f 90       	pop	r6
 83c:	5f 90       	pop	r5
 83e:	4f 90       	pop	r4
 840:	08 95       	ret

00000842 <vTaskStartScheduler>:
 842:	af 92       	push	r10
 844:	bf 92       	push	r11
 846:	cf 92       	push	r12
 848:	df 92       	push	r13
 84a:	ef 92       	push	r14
 84c:	ff 92       	push	r15
 84e:	0f 93       	push	r16
 850:	a1 2c       	mov	r10, r1
 852:	b1 2c       	mov	r11, r1
 854:	c1 2c       	mov	r12, r1
 856:	d1 2c       	mov	r13, r1
 858:	e1 2c       	mov	r14, r1
 85a:	f1 2c       	mov	r15, r1
 85c:	00 e0       	ldi	r16, 0x00	; 0
 85e:	20 e0       	ldi	r18, 0x00	; 0
 860:	30 e0       	ldi	r19, 0x00	; 0
 862:	45 e5       	ldi	r20, 0x55	; 85
 864:	50 e0       	ldi	r21, 0x00	; 0
 866:	6e e0       	ldi	r22, 0x0E	; 14
 868:	72 e0       	ldi	r23, 0x02	; 2
 86a:	8d ea       	ldi	r24, 0xAD	; 173
 86c:	95 e0       	ldi	r25, 0x05	; 5
 86e:	f6 de       	rcall	.-532    	; 0x65c <xTaskGenericCreate>
 870:	81 30       	cpi	r24, 0x01	; 1
 872:	41 f4       	brne	.+16     	; 0x884 <vTaskStartScheduler+0x42>
 874:	f8 94       	cli
 876:	80 93 f8 07 	sts	0x07F8, r24	; 0x8007f8 <xSchedulerRunning>
 87a:	10 92 fc 07 	sts	0x07FC, r1	; 0x8007fc <xTickCount+0x1>
 87e:	10 92 fb 07 	sts	0x07FB, r1	; 0x8007fb <xTickCount>
 882:	79 d2       	rcall	.+1266   	; 0xd76 <xPortStartScheduler>
 884:	0f 91       	pop	r16
 886:	ff 90       	pop	r15
 888:	ef 90       	pop	r14
 88a:	df 90       	pop	r13
 88c:	cf 90       	pop	r12
 88e:	bf 90       	pop	r11
 890:	af 90       	pop	r10
 892:	08 95       	ret

00000894 <vTaskSuspendAll>:
 894:	80 91 f7 07 	lds	r24, 0x07F7	; 0x8007f7 <uxSchedulerSuspended>
 898:	8f 5f       	subi	r24, 0xFF	; 255
 89a:	80 93 f7 07 	sts	0x07F7, r24	; 0x8007f7 <uxSchedulerSuspended>
 89e:	08 95       	ret

000008a0 <vTaskIncrementTick>:
 8a0:	0f 93       	push	r16
 8a2:	1f 93       	push	r17
 8a4:	cf 93       	push	r28
 8a6:	df 93       	push	r29
 8a8:	80 91 f7 07 	lds	r24, 0x07F7	; 0x8007f7 <uxSchedulerSuspended>
 8ac:	81 11       	cpse	r24, r1
 8ae:	af c0       	rjmp	.+350    	; 0xa0e <vTaskIncrementTick+0x16e>
 8b0:	80 91 fb 07 	lds	r24, 0x07FB	; 0x8007fb <xTickCount>
 8b4:	90 91 fc 07 	lds	r25, 0x07FC	; 0x8007fc <xTickCount+0x1>
 8b8:	01 96       	adiw	r24, 0x01	; 1
 8ba:	90 93 fc 07 	sts	0x07FC, r25	; 0x8007fc <xTickCount+0x1>
 8be:	80 93 fb 07 	sts	0x07FB, r24	; 0x8007fb <xTickCount>
 8c2:	80 91 fb 07 	lds	r24, 0x07FB	; 0x8007fb <xTickCount>
 8c6:	90 91 fc 07 	lds	r25, 0x07FC	; 0x8007fc <xTickCount+0x1>
 8ca:	89 2b       	or	r24, r25
 8cc:	99 f5       	brne	.+102    	; 0x934 <vTaskIncrementTick+0x94>
 8ce:	80 91 13 08 	lds	r24, 0x0813	; 0x800813 <pxDelayedTaskList>
 8d2:	90 91 14 08 	lds	r25, 0x0814	; 0x800814 <pxDelayedTaskList+0x1>
 8d6:	20 91 11 08 	lds	r18, 0x0811	; 0x800811 <pxOverflowDelayedTaskList>
 8da:	30 91 12 08 	lds	r19, 0x0812	; 0x800812 <pxOverflowDelayedTaskList+0x1>
 8de:	30 93 14 08 	sts	0x0814, r19	; 0x800814 <pxDelayedTaskList+0x1>
 8e2:	20 93 13 08 	sts	0x0813, r18	; 0x800813 <pxDelayedTaskList>
 8e6:	90 93 12 08 	sts	0x0812, r25	; 0x800812 <pxOverflowDelayedTaskList+0x1>
 8ea:	80 93 11 08 	sts	0x0811, r24	; 0x800811 <pxOverflowDelayedTaskList>
 8ee:	80 91 f4 07 	lds	r24, 0x07F4	; 0x8007f4 <xNumOfOverflows>
 8f2:	8f 5f       	subi	r24, 0xFF	; 255
 8f4:	80 93 f4 07 	sts	0x07F4, r24	; 0x8007f4 <xNumOfOverflows>
 8f8:	e0 91 13 08 	lds	r30, 0x0813	; 0x800813 <pxDelayedTaskList>
 8fc:	f0 91 14 08 	lds	r31, 0x0814	; 0x800814 <pxDelayedTaskList+0x1>
 900:	80 81       	ld	r24, Z
 902:	81 11       	cpse	r24, r1
 904:	07 c0       	rjmp	.+14     	; 0x914 <vTaskIncrementTick+0x74>
 906:	8f ef       	ldi	r24, 0xFF	; 255
 908:	9f ef       	ldi	r25, 0xFF	; 255
 90a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 90e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 912:	10 c0       	rjmp	.+32     	; 0x934 <vTaskIncrementTick+0x94>
 914:	e0 91 13 08 	lds	r30, 0x0813	; 0x800813 <pxDelayedTaskList>
 918:	f0 91 14 08 	lds	r31, 0x0814	; 0x800814 <pxDelayedTaskList+0x1>
 91c:	05 80       	ldd	r0, Z+5	; 0x05
 91e:	f6 81       	ldd	r31, Z+6	; 0x06
 920:	e0 2d       	mov	r30, r0
 922:	06 80       	ldd	r0, Z+6	; 0x06
 924:	f7 81       	ldd	r31, Z+7	; 0x07
 926:	e0 2d       	mov	r30, r0
 928:	82 81       	ldd	r24, Z+2	; 0x02
 92a:	93 81       	ldd	r25, Z+3	; 0x03
 92c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 930:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 934:	20 91 fb 07 	lds	r18, 0x07FB	; 0x8007fb <xTickCount>
 938:	30 91 fc 07 	lds	r19, 0x07FC	; 0x8007fc <xTickCount+0x1>
 93c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 940:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 944:	28 17       	cp	r18, r24
 946:	39 07       	cpc	r19, r25
 948:	08 f4       	brcc	.+2      	; 0x94c <vTaskIncrementTick+0xac>
 94a:	66 c0       	rjmp	.+204    	; 0xa18 <vTaskIncrementTick+0x178>
 94c:	e0 91 13 08 	lds	r30, 0x0813	; 0x800813 <pxDelayedTaskList>
 950:	f0 91 14 08 	lds	r31, 0x0814	; 0x800814 <pxDelayedTaskList+0x1>
 954:	80 81       	ld	r24, Z
 956:	88 23       	and	r24, r24
 958:	99 f0       	breq	.+38     	; 0x980 <vTaskIncrementTick+0xe0>
 95a:	e0 91 13 08 	lds	r30, 0x0813	; 0x800813 <pxDelayedTaskList>
 95e:	f0 91 14 08 	lds	r31, 0x0814	; 0x800814 <pxDelayedTaskList+0x1>
 962:	05 80       	ldd	r0, Z+5	; 0x05
 964:	f6 81       	ldd	r31, Z+6	; 0x06
 966:	e0 2d       	mov	r30, r0
 968:	c6 81       	ldd	r28, Z+6	; 0x06
 96a:	d7 81       	ldd	r29, Z+7	; 0x07
 96c:	8a 81       	ldd	r24, Y+2	; 0x02
 96e:	9b 81       	ldd	r25, Y+3	; 0x03
 970:	20 91 fb 07 	lds	r18, 0x07FB	; 0x8007fb <xTickCount>
 974:	30 91 fc 07 	lds	r19, 0x07FC	; 0x8007fc <xTickCount+0x1>
 978:	28 17       	cp	r18, r24
 97a:	39 07       	cpc	r19, r25
 97c:	f8 f4       	brcc	.+62     	; 0x9bc <vTaskIncrementTick+0x11c>
 97e:	19 c0       	rjmp	.+50     	; 0x9b2 <vTaskIncrementTick+0x112>
 980:	8f ef       	ldi	r24, 0xFF	; 255
 982:	9f ef       	ldi	r25, 0xFF	; 255
 984:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 988:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 98c:	45 c0       	rjmp	.+138    	; 0xa18 <vTaskIncrementTick+0x178>
 98e:	e0 91 13 08 	lds	r30, 0x0813	; 0x800813 <pxDelayedTaskList>
 992:	f0 91 14 08 	lds	r31, 0x0814	; 0x800814 <pxDelayedTaskList+0x1>
 996:	05 80       	ldd	r0, Z+5	; 0x05
 998:	f6 81       	ldd	r31, Z+6	; 0x06
 99a:	e0 2d       	mov	r30, r0
 99c:	c6 81       	ldd	r28, Z+6	; 0x06
 99e:	d7 81       	ldd	r29, Z+7	; 0x07
 9a0:	8a 81       	ldd	r24, Y+2	; 0x02
 9a2:	9b 81       	ldd	r25, Y+3	; 0x03
 9a4:	20 91 fb 07 	lds	r18, 0x07FB	; 0x8007fb <xTickCount>
 9a8:	30 91 fc 07 	lds	r19, 0x07FC	; 0x8007fc <xTickCount+0x1>
 9ac:	28 17       	cp	r18, r24
 9ae:	39 07       	cpc	r19, r25
 9b0:	28 f4       	brcc	.+10     	; 0x9bc <vTaskIncrementTick+0x11c>
 9b2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 9b6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 9ba:	2e c0       	rjmp	.+92     	; 0xa18 <vTaskIncrementTick+0x178>
 9bc:	8e 01       	movw	r16, r28
 9be:	0e 5f       	subi	r16, 0xFE	; 254
 9c0:	1f 4f       	sbci	r17, 0xFF	; 255
 9c2:	c8 01       	movw	r24, r16
 9c4:	1a dc       	rcall	.-1996   	; 0x1fa <vListRemove>
 9c6:	8c 89       	ldd	r24, Y+20	; 0x14
 9c8:	9d 89       	ldd	r25, Y+21	; 0x15
 9ca:	89 2b       	or	r24, r25
 9cc:	19 f0       	breq	.+6      	; 0x9d4 <vTaskIncrementTick+0x134>
 9ce:	ce 01       	movw	r24, r28
 9d0:	0c 96       	adiw	r24, 0x0c	; 12
 9d2:	13 dc       	rcall	.-2010   	; 0x1fa <vListRemove>
 9d4:	2e 89       	ldd	r18, Y+22	; 0x16
 9d6:	80 91 f9 07 	lds	r24, 0x07F9	; 0x8007f9 <uxTopReadyPriority>
 9da:	82 17       	cp	r24, r18
 9dc:	10 f4       	brcc	.+4      	; 0x9e2 <vTaskIncrementTick+0x142>
 9de:	20 93 f9 07 	sts	0x07F9, r18	; 0x8007f9 <uxTopReadyPriority>
 9e2:	30 e0       	ldi	r19, 0x00	; 0
 9e4:	c9 01       	movw	r24, r18
 9e6:	88 0f       	add	r24, r24
 9e8:	99 1f       	adc	r25, r25
 9ea:	88 0f       	add	r24, r24
 9ec:	99 1f       	adc	r25, r25
 9ee:	88 0f       	add	r24, r24
 9f0:	99 1f       	adc	r25, r25
 9f2:	82 0f       	add	r24, r18
 9f4:	93 1f       	adc	r25, r19
 9f6:	b8 01       	movw	r22, r16
 9f8:	89 5d       	subi	r24, 0xD9	; 217
 9fa:	97 4f       	sbci	r25, 0xF7	; 247
 9fc:	9c db       	rcall	.-2248   	; 0x136 <vListInsertEnd>
 9fe:	e0 91 13 08 	lds	r30, 0x0813	; 0x800813 <pxDelayedTaskList>
 a02:	f0 91 14 08 	lds	r31, 0x0814	; 0x800814 <pxDelayedTaskList+0x1>
 a06:	80 81       	ld	r24, Z
 a08:	81 11       	cpse	r24, r1
 a0a:	c1 cf       	rjmp	.-126    	; 0x98e <vTaskIncrementTick+0xee>
 a0c:	b9 cf       	rjmp	.-142    	; 0x980 <vTaskIncrementTick+0xe0>
 a0e:	80 91 f6 07 	lds	r24, 0x07F6	; 0x8007f6 <uxMissedTicks>
 a12:	8f 5f       	subi	r24, 0xFF	; 255
 a14:	80 93 f6 07 	sts	0x07F6, r24	; 0x8007f6 <uxMissedTicks>
 a18:	df 91       	pop	r29
 a1a:	cf 91       	pop	r28
 a1c:	1f 91       	pop	r17
 a1e:	0f 91       	pop	r16
 a20:	08 95       	ret

00000a22 <xTaskResumeAll>:
 a22:	cf 92       	push	r12
 a24:	df 92       	push	r13
 a26:	ef 92       	push	r14
 a28:	ff 92       	push	r15
 a2a:	0f 93       	push	r16
 a2c:	1f 93       	push	r17
 a2e:	cf 93       	push	r28
 a30:	df 93       	push	r29
 a32:	0f b6       	in	r0, 0x3f	; 63
 a34:	f8 94       	cli
 a36:	0f 92       	push	r0
 a38:	80 91 f7 07 	lds	r24, 0x07F7	; 0x8007f7 <uxSchedulerSuspended>
 a3c:	81 50       	subi	r24, 0x01	; 1
 a3e:	80 93 f7 07 	sts	0x07F7, r24	; 0x8007f7 <uxSchedulerSuspended>
 a42:	80 91 f7 07 	lds	r24, 0x07F7	; 0x8007f7 <uxSchedulerSuspended>
 a46:	81 11       	cpse	r24, r1
 a48:	5f c0       	rjmp	.+190    	; 0xb08 <xTaskResumeAll+0xe6>
 a4a:	80 91 fd 07 	lds	r24, 0x07FD	; 0x8007fd <uxCurrentNumberOfTasks>
 a4e:	81 11       	cpse	r24, r1
 a50:	2f c0       	rjmp	.+94     	; 0xab0 <xTaskResumeAll+0x8e>
 a52:	5d c0       	rjmp	.+186    	; 0xb0e <xTaskResumeAll+0xec>
 a54:	d7 01       	movw	r26, r14
 a56:	15 96       	adiw	r26, 0x05	; 5
 a58:	ed 91       	ld	r30, X+
 a5a:	fc 91       	ld	r31, X
 a5c:	16 97       	sbiw	r26, 0x06	; 6
 a5e:	c6 81       	ldd	r28, Z+6	; 0x06
 a60:	d7 81       	ldd	r29, Z+7	; 0x07
 a62:	ce 01       	movw	r24, r28
 a64:	0c 96       	adiw	r24, 0x0c	; 12
 a66:	c9 db       	rcall	.-2158   	; 0x1fa <vListRemove>
 a68:	8e 01       	movw	r16, r28
 a6a:	0e 5f       	subi	r16, 0xFE	; 254
 a6c:	1f 4f       	sbci	r17, 0xFF	; 255
 a6e:	c8 01       	movw	r24, r16
 a70:	c4 db       	rcall	.-2168   	; 0x1fa <vListRemove>
 a72:	2e 89       	ldd	r18, Y+22	; 0x16
 a74:	80 91 f9 07 	lds	r24, 0x07F9	; 0x8007f9 <uxTopReadyPriority>
 a78:	82 17       	cp	r24, r18
 a7a:	10 f4       	brcc	.+4      	; 0xa80 <xTaskResumeAll+0x5e>
 a7c:	20 93 f9 07 	sts	0x07F9, r18	; 0x8007f9 <uxTopReadyPriority>
 a80:	30 e0       	ldi	r19, 0x00	; 0
 a82:	c9 01       	movw	r24, r18
 a84:	88 0f       	add	r24, r24
 a86:	99 1f       	adc	r25, r25
 a88:	88 0f       	add	r24, r24
 a8a:	99 1f       	adc	r25, r25
 a8c:	88 0f       	add	r24, r24
 a8e:	99 1f       	adc	r25, r25
 a90:	82 0f       	add	r24, r18
 a92:	93 1f       	adc	r25, r19
 a94:	b8 01       	movw	r22, r16
 a96:	89 5d       	subi	r24, 0xD9	; 217
 a98:	97 4f       	sbci	r25, 0xF7	; 247
 a9a:	4d db       	rcall	.-2406   	; 0x136 <vListInsertEnd>
 a9c:	e0 91 4b 08 	lds	r30, 0x084B	; 0x80084b <pxCurrentTCB>
 aa0:	f0 91 4c 08 	lds	r31, 0x084C	; 0x80084c <pxCurrentTCB+0x1>
 aa4:	9e 89       	ldd	r25, Y+22	; 0x16
 aa6:	86 89       	ldd	r24, Z+22	; 0x16
 aa8:	98 17       	cp	r25, r24
 aaa:	58 f0       	brcs	.+22     	; 0xac2 <xTaskResumeAll+0xa0>
 aac:	dc 2c       	mov	r13, r12
 aae:	09 c0       	rjmp	.+18     	; 0xac2 <xTaskResumeAll+0xa0>
 ab0:	d1 2c       	mov	r13, r1
 ab2:	0f 2e       	mov	r0, r31
 ab4:	f8 e0       	ldi	r31, 0x08	; 8
 ab6:	ef 2e       	mov	r14, r31
 ab8:	f8 e0       	ldi	r31, 0x08	; 8
 aba:	ff 2e       	mov	r15, r31
 abc:	f0 2d       	mov	r31, r0
 abe:	cc 24       	eor	r12, r12
 ac0:	c3 94       	inc	r12
 ac2:	f7 01       	movw	r30, r14
 ac4:	80 81       	ld	r24, Z
 ac6:	81 11       	cpse	r24, r1
 ac8:	c5 cf       	rjmp	.-118    	; 0xa54 <xTaskResumeAll+0x32>
 aca:	80 91 f6 07 	lds	r24, 0x07F6	; 0x8007f6 <uxMissedTicks>
 ace:	88 23       	and	r24, r24
 ad0:	79 f0       	breq	.+30     	; 0xaf0 <xTaskResumeAll+0xce>
 ad2:	80 91 f6 07 	lds	r24, 0x07F6	; 0x8007f6 <uxMissedTicks>
 ad6:	88 23       	and	r24, r24
 ad8:	91 f0       	breq	.+36     	; 0xafe <xTaskResumeAll+0xdc>
 ada:	e2 de       	rcall	.-572    	; 0x8a0 <vTaskIncrementTick>
 adc:	80 91 f6 07 	lds	r24, 0x07F6	; 0x8007f6 <uxMissedTicks>
 ae0:	81 50       	subi	r24, 0x01	; 1
 ae2:	80 93 f6 07 	sts	0x07F6, r24	; 0x8007f6 <uxMissedTicks>
 ae6:	80 91 f6 07 	lds	r24, 0x07F6	; 0x8007f6 <uxMissedTicks>
 aea:	81 11       	cpse	r24, r1
 aec:	f6 cf       	rjmp	.-20     	; 0xada <xTaskResumeAll+0xb8>
 aee:	07 c0       	rjmp	.+14     	; 0xafe <xTaskResumeAll+0xdc>
 af0:	f1 e0       	ldi	r31, 0x01	; 1
 af2:	df 16       	cp	r13, r31
 af4:	21 f0       	breq	.+8      	; 0xafe <xTaskResumeAll+0xdc>
 af6:	80 91 f5 07 	lds	r24, 0x07F5	; 0x8007f5 <xMissedYield>
 afa:	81 30       	cpi	r24, 0x01	; 1
 afc:	39 f4       	brne	.+14     	; 0xb0c <xTaskResumeAll+0xea>
 afe:	10 92 f5 07 	sts	0x07F5, r1	; 0x8007f5 <xMissedYield>
 b02:	73 d1       	rcall	.+742    	; 0xdea <vPortYield>
 b04:	81 e0       	ldi	r24, 0x01	; 1
 b06:	03 c0       	rjmp	.+6      	; 0xb0e <xTaskResumeAll+0xec>
 b08:	80 e0       	ldi	r24, 0x00	; 0
 b0a:	01 c0       	rjmp	.+2      	; 0xb0e <xTaskResumeAll+0xec>
 b0c:	80 e0       	ldi	r24, 0x00	; 0
 b0e:	0f 90       	pop	r0
 b10:	0f be       	out	0x3f, r0	; 63
 b12:	df 91       	pop	r29
 b14:	cf 91       	pop	r28
 b16:	1f 91       	pop	r17
 b18:	0f 91       	pop	r16
 b1a:	ff 90       	pop	r15
 b1c:	ef 90       	pop	r14
 b1e:	df 90       	pop	r13
 b20:	cf 90       	pop	r12
 b22:	08 95       	ret

00000b24 <vTaskDelay>:
 b24:	cf 93       	push	r28
 b26:	df 93       	push	r29
 b28:	ec 01       	movw	r28, r24
 b2a:	89 2b       	or	r24, r25
 b2c:	91 f0       	breq	.+36     	; 0xb52 <vTaskDelay+0x2e>
 b2e:	b2 de       	rcall	.-668    	; 0x894 <vTaskSuspendAll>
 b30:	80 91 fb 07 	lds	r24, 0x07FB	; 0x8007fb <xTickCount>
 b34:	90 91 fc 07 	lds	r25, 0x07FC	; 0x8007fc <xTickCount+0x1>
 b38:	c8 0f       	add	r28, r24
 b3a:	d9 1f       	adc	r29, r25
 b3c:	80 91 4b 08 	lds	r24, 0x084B	; 0x80084b <pxCurrentTCB>
 b40:	90 91 4c 08 	lds	r25, 0x084C	; 0x80084c <pxCurrentTCB+0x1>
 b44:	02 96       	adiw	r24, 0x02	; 2
 b46:	59 db       	rcall	.-2382   	; 0x1fa <vListRemove>
 b48:	ce 01       	movw	r24, r28
 b4a:	53 dd       	rcall	.-1370   	; 0x5f2 <prvAddCurrentTaskToDelayedList>
 b4c:	6a df       	rcall	.-300    	; 0xa22 <xTaskResumeAll>
 b4e:	81 11       	cpse	r24, r1
 b50:	01 c0       	rjmp	.+2      	; 0xb54 <vTaskDelay+0x30>
 b52:	4b d1       	rcall	.+662    	; 0xdea <vPortYield>
 b54:	df 91       	pop	r29
 b56:	cf 91       	pop	r28
 b58:	08 95       	ret

00000b5a <prvIdleTask>:
 b5a:	0f 2e       	mov	r0, r31
 b5c:	ff ef       	ldi	r31, 0xFF	; 255
 b5e:	ef 2e       	mov	r14, r31
 b60:	f7 e0       	ldi	r31, 0x07	; 7
 b62:	ff 2e       	mov	r15, r31
 b64:	f0 2d       	mov	r31, r0
 b66:	c7 e2       	ldi	r28, 0x27	; 39
 b68:	d8 e0       	ldi	r29, 0x08	; 8
 b6a:	80 91 fe 07 	lds	r24, 0x07FE	; 0x8007fe <uxTasksDeleted>
 b6e:	88 23       	and	r24, r24
 b70:	29 f1       	breq	.+74     	; 0xbbc <prvIdleTask+0x62>
 b72:	90 de       	rcall	.-736    	; 0x894 <vTaskSuspendAll>
 b74:	d7 01       	movw	r26, r14
 b76:	1c 91       	ld	r17, X
 b78:	54 df       	rcall	.-344    	; 0xa22 <xTaskResumeAll>
 b7a:	11 23       	and	r17, r17
 b7c:	f9 f0       	breq	.+62     	; 0xbbc <prvIdleTask+0x62>
 b7e:	0f b6       	in	r0, 0x3f	; 63
 b80:	f8 94       	cli
 b82:	0f 92       	push	r0
 b84:	d7 01       	movw	r26, r14
 b86:	15 96       	adiw	r26, 0x05	; 5
 b88:	ed 91       	ld	r30, X+
 b8a:	fc 91       	ld	r31, X
 b8c:	16 97       	sbiw	r26, 0x06	; 6
 b8e:	06 81       	ldd	r16, Z+6	; 0x06
 b90:	17 81       	ldd	r17, Z+7	; 0x07
 b92:	c8 01       	movw	r24, r16
 b94:	02 96       	adiw	r24, 0x02	; 2
 b96:	31 db       	rcall	.-2462   	; 0x1fa <vListRemove>
 b98:	80 91 fd 07 	lds	r24, 0x07FD	; 0x8007fd <uxCurrentNumberOfTasks>
 b9c:	81 50       	subi	r24, 0x01	; 1
 b9e:	80 93 fd 07 	sts	0x07FD, r24	; 0x8007fd <uxCurrentNumberOfTasks>
 ba2:	80 91 fe 07 	lds	r24, 0x07FE	; 0x8007fe <uxTasksDeleted>
 ba6:	81 50       	subi	r24, 0x01	; 1
 ba8:	80 93 fe 07 	sts	0x07FE, r24	; 0x8007fe <uxTasksDeleted>
 bac:	0f 90       	pop	r0
 bae:	0f be       	out	0x3f, r0	; 63
 bb0:	f8 01       	movw	r30, r16
 bb2:	87 89       	ldd	r24, Z+23	; 0x17
 bb4:	90 8d       	ldd	r25, Z+24	; 0x18
 bb6:	ac da       	rcall	.-2728   	; 0x110 <vPortFree>
 bb8:	c8 01       	movw	r24, r16
 bba:	aa da       	rcall	.-2732   	; 0x110 <vPortFree>
 bbc:	88 81       	ld	r24, Y
 bbe:	82 30       	cpi	r24, 0x02	; 2
 bc0:	a0 f2       	brcs	.-88     	; 0xb6a <prvIdleTask+0x10>
 bc2:	13 d1       	rcall	.+550    	; 0xdea <vPortYield>
 bc4:	d2 cf       	rjmp	.-92     	; 0xb6a <prvIdleTask+0x10>

00000bc6 <vTaskSwitchContext>:
 bc6:	80 91 f7 07 	lds	r24, 0x07F7	; 0x8007f7 <uxSchedulerSuspended>
 bca:	81 11       	cpse	r24, r1
 bcc:	13 c0       	rjmp	.+38     	; 0xbf4 <vTaskSwitchContext+0x2e>
 bce:	80 91 f9 07 	lds	r24, 0x07F9	; 0x8007f9 <uxTopReadyPriority>
 bd2:	90 e0       	ldi	r25, 0x00	; 0
 bd4:	fc 01       	movw	r30, r24
 bd6:	ee 0f       	add	r30, r30
 bd8:	ff 1f       	adc	r31, r31
 bda:	ee 0f       	add	r30, r30
 bdc:	ff 1f       	adc	r31, r31
 bde:	ee 0f       	add	r30, r30
 be0:	ff 1f       	adc	r31, r31
 be2:	8e 0f       	add	r24, r30
 be4:	9f 1f       	adc	r25, r31
 be6:	fc 01       	movw	r30, r24
 be8:	e9 5d       	subi	r30, 0xD9	; 217
 bea:	f7 4f       	sbci	r31, 0xF7	; 247
 bec:	80 81       	ld	r24, Z
 bee:	88 23       	and	r24, r24
 bf0:	29 f0       	breq	.+10     	; 0xbfc <vTaskSwitchContext+0x36>
 bf2:	1b c0       	rjmp	.+54     	; 0xc2a <vTaskSwitchContext+0x64>
 bf4:	81 e0       	ldi	r24, 0x01	; 1
 bf6:	80 93 f5 07 	sts	0x07F5, r24	; 0x8007f5 <xMissedYield>
 bfa:	08 95       	ret
 bfc:	80 91 f9 07 	lds	r24, 0x07F9	; 0x8007f9 <uxTopReadyPriority>
 c00:	81 50       	subi	r24, 0x01	; 1
 c02:	80 93 f9 07 	sts	0x07F9, r24	; 0x8007f9 <uxTopReadyPriority>
 c06:	80 91 f9 07 	lds	r24, 0x07F9	; 0x8007f9 <uxTopReadyPriority>
 c0a:	90 e0       	ldi	r25, 0x00	; 0
 c0c:	fc 01       	movw	r30, r24
 c0e:	ee 0f       	add	r30, r30
 c10:	ff 1f       	adc	r31, r31
 c12:	ee 0f       	add	r30, r30
 c14:	ff 1f       	adc	r31, r31
 c16:	ee 0f       	add	r30, r30
 c18:	ff 1f       	adc	r31, r31
 c1a:	8e 0f       	add	r24, r30
 c1c:	9f 1f       	adc	r25, r31
 c1e:	fc 01       	movw	r30, r24
 c20:	e9 5d       	subi	r30, 0xD9	; 217
 c22:	f7 4f       	sbci	r31, 0xF7	; 247
 c24:	80 81       	ld	r24, Z
 c26:	88 23       	and	r24, r24
 c28:	49 f3       	breq	.-46     	; 0xbfc <vTaskSwitchContext+0x36>
 c2a:	80 91 f9 07 	lds	r24, 0x07F9	; 0x8007f9 <uxTopReadyPriority>
 c2e:	90 e0       	ldi	r25, 0x00	; 0
 c30:	9c 01       	movw	r18, r24
 c32:	22 0f       	add	r18, r18
 c34:	33 1f       	adc	r19, r19
 c36:	22 0f       	add	r18, r18
 c38:	33 1f       	adc	r19, r19
 c3a:	22 0f       	add	r18, r18
 c3c:	33 1f       	adc	r19, r19
 c3e:	28 0f       	add	r18, r24
 c40:	39 1f       	adc	r19, r25
 c42:	d9 01       	movw	r26, r18
 c44:	a9 5d       	subi	r26, 0xD9	; 217
 c46:	b7 4f       	sbci	r27, 0xF7	; 247
 c48:	11 96       	adiw	r26, 0x01	; 1
 c4a:	ed 91       	ld	r30, X+
 c4c:	fc 91       	ld	r31, X
 c4e:	12 97       	sbiw	r26, 0x02	; 2
 c50:	02 80       	ldd	r0, Z+2	; 0x02
 c52:	f3 81       	ldd	r31, Z+3	; 0x03
 c54:	e0 2d       	mov	r30, r0
 c56:	12 96       	adiw	r26, 0x02	; 2
 c58:	fc 93       	st	X, r31
 c5a:	ee 93       	st	-X, r30
 c5c:	11 97       	sbiw	r26, 0x01	; 1
 c5e:	26 5d       	subi	r18, 0xD6	; 214
 c60:	37 4f       	sbci	r19, 0xF7	; 247
 c62:	e2 17       	cp	r30, r18
 c64:	f3 07       	cpc	r31, r19
 c66:	29 f4       	brne	.+10     	; 0xc72 <vTaskSwitchContext+0xac>
 c68:	22 81       	ldd	r18, Z+2	; 0x02
 c6a:	33 81       	ldd	r19, Z+3	; 0x03
 c6c:	fd 01       	movw	r30, r26
 c6e:	32 83       	std	Z+2, r19	; 0x02
 c70:	21 83       	std	Z+1, r18	; 0x01
 c72:	fc 01       	movw	r30, r24
 c74:	ee 0f       	add	r30, r30
 c76:	ff 1f       	adc	r31, r31
 c78:	ee 0f       	add	r30, r30
 c7a:	ff 1f       	adc	r31, r31
 c7c:	ee 0f       	add	r30, r30
 c7e:	ff 1f       	adc	r31, r31
 c80:	8e 0f       	add	r24, r30
 c82:	9f 1f       	adc	r25, r31
 c84:	fc 01       	movw	r30, r24
 c86:	e9 5d       	subi	r30, 0xD9	; 217
 c88:	f7 4f       	sbci	r31, 0xF7	; 247
 c8a:	01 80       	ldd	r0, Z+1	; 0x01
 c8c:	f2 81       	ldd	r31, Z+2	; 0x02
 c8e:	e0 2d       	mov	r30, r0
 c90:	86 81       	ldd	r24, Z+6	; 0x06
 c92:	97 81       	ldd	r25, Z+7	; 0x07
 c94:	90 93 4c 08 	sts	0x084C, r25	; 0x80084c <pxCurrentTCB+0x1>
 c98:	80 93 4b 08 	sts	0x084B, r24	; 0x80084b <pxCurrentTCB>
 c9c:	08 95       	ret

00000c9e <pxPortInitialiseStack>:
 c9e:	31 e1       	ldi	r19, 0x11	; 17
 ca0:	fc 01       	movw	r30, r24
 ca2:	30 83       	st	Z, r19
 ca4:	31 97       	sbiw	r30, 0x01	; 1
 ca6:	22 e2       	ldi	r18, 0x22	; 34
 ca8:	20 83       	st	Z, r18
 caa:	31 97       	sbiw	r30, 0x01	; 1
 cac:	a3 e3       	ldi	r26, 0x33	; 51
 cae:	a0 83       	st	Z, r26
 cb0:	31 97       	sbiw	r30, 0x01	; 1
 cb2:	60 83       	st	Z, r22
 cb4:	31 97       	sbiw	r30, 0x01	; 1
 cb6:	70 83       	st	Z, r23
 cb8:	31 97       	sbiw	r30, 0x01	; 1
 cba:	10 82       	st	Z, r1
 cbc:	31 97       	sbiw	r30, 0x01	; 1
 cbe:	60 e8       	ldi	r22, 0x80	; 128
 cc0:	60 83       	st	Z, r22
 cc2:	31 97       	sbiw	r30, 0x01	; 1
 cc4:	10 82       	st	Z, r1
 cc6:	31 97       	sbiw	r30, 0x01	; 1
 cc8:	62 e0       	ldi	r22, 0x02	; 2
 cca:	60 83       	st	Z, r22
 ccc:	31 97       	sbiw	r30, 0x01	; 1
 cce:	63 e0       	ldi	r22, 0x03	; 3
 cd0:	60 83       	st	Z, r22
 cd2:	31 97       	sbiw	r30, 0x01	; 1
 cd4:	64 e0       	ldi	r22, 0x04	; 4
 cd6:	60 83       	st	Z, r22
 cd8:	31 97       	sbiw	r30, 0x01	; 1
 cda:	65 e0       	ldi	r22, 0x05	; 5
 cdc:	60 83       	st	Z, r22
 cde:	31 97       	sbiw	r30, 0x01	; 1
 ce0:	66 e0       	ldi	r22, 0x06	; 6
 ce2:	60 83       	st	Z, r22
 ce4:	31 97       	sbiw	r30, 0x01	; 1
 ce6:	67 e0       	ldi	r22, 0x07	; 7
 ce8:	60 83       	st	Z, r22
 cea:	31 97       	sbiw	r30, 0x01	; 1
 cec:	68 e0       	ldi	r22, 0x08	; 8
 cee:	60 83       	st	Z, r22
 cf0:	31 97       	sbiw	r30, 0x01	; 1
 cf2:	69 e0       	ldi	r22, 0x09	; 9
 cf4:	60 83       	st	Z, r22
 cf6:	31 97       	sbiw	r30, 0x01	; 1
 cf8:	60 e1       	ldi	r22, 0x10	; 16
 cfa:	60 83       	st	Z, r22
 cfc:	31 97       	sbiw	r30, 0x01	; 1
 cfe:	30 83       	st	Z, r19
 d00:	31 97       	sbiw	r30, 0x01	; 1
 d02:	32 e1       	ldi	r19, 0x12	; 18
 d04:	30 83       	st	Z, r19
 d06:	31 97       	sbiw	r30, 0x01	; 1
 d08:	33 e1       	ldi	r19, 0x13	; 19
 d0a:	30 83       	st	Z, r19
 d0c:	31 97       	sbiw	r30, 0x01	; 1
 d0e:	34 e1       	ldi	r19, 0x14	; 20
 d10:	30 83       	st	Z, r19
 d12:	31 97       	sbiw	r30, 0x01	; 1
 d14:	35 e1       	ldi	r19, 0x15	; 21
 d16:	30 83       	st	Z, r19
 d18:	31 97       	sbiw	r30, 0x01	; 1
 d1a:	36 e1       	ldi	r19, 0x16	; 22
 d1c:	30 83       	st	Z, r19
 d1e:	31 97       	sbiw	r30, 0x01	; 1
 d20:	37 e1       	ldi	r19, 0x17	; 23
 d22:	30 83       	st	Z, r19
 d24:	31 97       	sbiw	r30, 0x01	; 1
 d26:	38 e1       	ldi	r19, 0x18	; 24
 d28:	30 83       	st	Z, r19
 d2a:	31 97       	sbiw	r30, 0x01	; 1
 d2c:	39 e1       	ldi	r19, 0x19	; 25
 d2e:	30 83       	st	Z, r19
 d30:	31 97       	sbiw	r30, 0x01	; 1
 d32:	30 e2       	ldi	r19, 0x20	; 32
 d34:	30 83       	st	Z, r19
 d36:	31 97       	sbiw	r30, 0x01	; 1
 d38:	31 e2       	ldi	r19, 0x21	; 33
 d3a:	30 83       	st	Z, r19
 d3c:	31 97       	sbiw	r30, 0x01	; 1
 d3e:	20 83       	st	Z, r18
 d40:	31 97       	sbiw	r30, 0x01	; 1
 d42:	23 e2       	ldi	r18, 0x23	; 35
 d44:	20 83       	st	Z, r18
 d46:	31 97       	sbiw	r30, 0x01	; 1
 d48:	40 83       	st	Z, r20
 d4a:	31 97       	sbiw	r30, 0x01	; 1
 d4c:	50 83       	st	Z, r21
 d4e:	31 97       	sbiw	r30, 0x01	; 1
 d50:	26 e2       	ldi	r18, 0x26	; 38
 d52:	20 83       	st	Z, r18
 d54:	31 97       	sbiw	r30, 0x01	; 1
 d56:	27 e2       	ldi	r18, 0x27	; 39
 d58:	20 83       	st	Z, r18
 d5a:	31 97       	sbiw	r30, 0x01	; 1
 d5c:	28 e2       	ldi	r18, 0x28	; 40
 d5e:	20 83       	st	Z, r18
 d60:	31 97       	sbiw	r30, 0x01	; 1
 d62:	29 e2       	ldi	r18, 0x29	; 41
 d64:	20 83       	st	Z, r18
 d66:	31 97       	sbiw	r30, 0x01	; 1
 d68:	20 e3       	ldi	r18, 0x30	; 48
 d6a:	20 83       	st	Z, r18
 d6c:	31 97       	sbiw	r30, 0x01	; 1
 d6e:	21 e3       	ldi	r18, 0x31	; 49
 d70:	20 83       	st	Z, r18
 d72:	86 97       	sbiw	r24, 0x26	; 38
 d74:	08 95       	ret

00000d76 <xPortStartScheduler>:
 d76:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 d7a:	8c e7       	ldi	r24, 0x7C	; 124
 d7c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 d80:	8b e0       	ldi	r24, 0x0B	; 11
 d82:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 d86:	ef e6       	ldi	r30, 0x6F	; 111
 d88:	f0 e0       	ldi	r31, 0x00	; 0
 d8a:	80 81       	ld	r24, Z
 d8c:	82 60       	ori	r24, 0x02	; 2
 d8e:	80 83       	st	Z, r24
 d90:	a0 91 4b 08 	lds	r26, 0x084B	; 0x80084b <pxCurrentTCB>
 d94:	b0 91 4c 08 	lds	r27, 0x084C	; 0x80084c <pxCurrentTCB+0x1>
 d98:	cd 91       	ld	r28, X+
 d9a:	cd bf       	out	0x3d, r28	; 61
 d9c:	dd 91       	ld	r29, X+
 d9e:	de bf       	out	0x3e, r29	; 62
 da0:	ff 91       	pop	r31
 da2:	ef 91       	pop	r30
 da4:	df 91       	pop	r29
 da6:	cf 91       	pop	r28
 da8:	bf 91       	pop	r27
 daa:	af 91       	pop	r26
 dac:	9f 91       	pop	r25
 dae:	8f 91       	pop	r24
 db0:	7f 91       	pop	r23
 db2:	6f 91       	pop	r22
 db4:	5f 91       	pop	r21
 db6:	4f 91       	pop	r20
 db8:	3f 91       	pop	r19
 dba:	2f 91       	pop	r18
 dbc:	1f 91       	pop	r17
 dbe:	0f 91       	pop	r16
 dc0:	ff 90       	pop	r15
 dc2:	ef 90       	pop	r14
 dc4:	df 90       	pop	r13
 dc6:	cf 90       	pop	r12
 dc8:	bf 90       	pop	r11
 dca:	af 90       	pop	r10
 dcc:	9f 90       	pop	r9
 dce:	8f 90       	pop	r8
 dd0:	7f 90       	pop	r7
 dd2:	6f 90       	pop	r6
 dd4:	5f 90       	pop	r5
 dd6:	4f 90       	pop	r4
 dd8:	3f 90       	pop	r3
 dda:	2f 90       	pop	r2
 ddc:	1f 90       	pop	r1
 dde:	0f 90       	pop	r0
 de0:	0f be       	out	0x3f, r0	; 63
 de2:	0f 90       	pop	r0
 de4:	08 95       	ret
 de6:	81 e0       	ldi	r24, 0x01	; 1
 de8:	08 95       	ret

00000dea <vPortYield>:
 dea:	0f 92       	push	r0
 dec:	0f b6       	in	r0, 0x3f	; 63
 dee:	f8 94       	cli
 df0:	0f 92       	push	r0
 df2:	1f 92       	push	r1
 df4:	11 24       	eor	r1, r1
 df6:	2f 92       	push	r2
 df8:	3f 92       	push	r3
 dfa:	4f 92       	push	r4
 dfc:	5f 92       	push	r5
 dfe:	6f 92       	push	r6
 e00:	7f 92       	push	r7
 e02:	8f 92       	push	r8
 e04:	9f 92       	push	r9
 e06:	af 92       	push	r10
 e08:	bf 92       	push	r11
 e0a:	cf 92       	push	r12
 e0c:	df 92       	push	r13
 e0e:	ef 92       	push	r14
 e10:	ff 92       	push	r15
 e12:	0f 93       	push	r16
 e14:	1f 93       	push	r17
 e16:	2f 93       	push	r18
 e18:	3f 93       	push	r19
 e1a:	4f 93       	push	r20
 e1c:	5f 93       	push	r21
 e1e:	6f 93       	push	r22
 e20:	7f 93       	push	r23
 e22:	8f 93       	push	r24
 e24:	9f 93       	push	r25
 e26:	af 93       	push	r26
 e28:	bf 93       	push	r27
 e2a:	cf 93       	push	r28
 e2c:	df 93       	push	r29
 e2e:	ef 93       	push	r30
 e30:	ff 93       	push	r31
 e32:	a0 91 4b 08 	lds	r26, 0x084B	; 0x80084b <pxCurrentTCB>
 e36:	b0 91 4c 08 	lds	r27, 0x084C	; 0x80084c <pxCurrentTCB+0x1>
 e3a:	0d b6       	in	r0, 0x3d	; 61
 e3c:	0d 92       	st	X+, r0
 e3e:	0e b6       	in	r0, 0x3e	; 62
 e40:	0d 92       	st	X+, r0
 e42:	c1 de       	rcall	.-638    	; 0xbc6 <vTaskSwitchContext>
 e44:	a0 91 4b 08 	lds	r26, 0x084B	; 0x80084b <pxCurrentTCB>
 e48:	b0 91 4c 08 	lds	r27, 0x084C	; 0x80084c <pxCurrentTCB+0x1>
 e4c:	cd 91       	ld	r28, X+
 e4e:	cd bf       	out	0x3d, r28	; 61
 e50:	dd 91       	ld	r29, X+
 e52:	de bf       	out	0x3e, r29	; 62
 e54:	ff 91       	pop	r31
 e56:	ef 91       	pop	r30
 e58:	df 91       	pop	r29
 e5a:	cf 91       	pop	r28
 e5c:	bf 91       	pop	r27
 e5e:	af 91       	pop	r26
 e60:	9f 91       	pop	r25
 e62:	8f 91       	pop	r24
 e64:	7f 91       	pop	r23
 e66:	6f 91       	pop	r22
 e68:	5f 91       	pop	r21
 e6a:	4f 91       	pop	r20
 e6c:	3f 91       	pop	r19
 e6e:	2f 91       	pop	r18
 e70:	1f 91       	pop	r17
 e72:	0f 91       	pop	r16
 e74:	ff 90       	pop	r15
 e76:	ef 90       	pop	r14
 e78:	df 90       	pop	r13
 e7a:	cf 90       	pop	r12
 e7c:	bf 90       	pop	r11
 e7e:	af 90       	pop	r10
 e80:	9f 90       	pop	r9
 e82:	8f 90       	pop	r8
 e84:	7f 90       	pop	r7
 e86:	6f 90       	pop	r6
 e88:	5f 90       	pop	r5
 e8a:	4f 90       	pop	r4
 e8c:	3f 90       	pop	r3
 e8e:	2f 90       	pop	r2
 e90:	1f 90       	pop	r1
 e92:	0f 90       	pop	r0
 e94:	0f be       	out	0x3f, r0	; 63
 e96:	0f 90       	pop	r0
 e98:	08 95       	ret

00000e9a <vPortYieldFromTick>:
 e9a:	0f 92       	push	r0
 e9c:	0f b6       	in	r0, 0x3f	; 63
 e9e:	f8 94       	cli
 ea0:	0f 92       	push	r0
 ea2:	1f 92       	push	r1
 ea4:	11 24       	eor	r1, r1
 ea6:	2f 92       	push	r2
 ea8:	3f 92       	push	r3
 eaa:	4f 92       	push	r4
 eac:	5f 92       	push	r5
 eae:	6f 92       	push	r6
 eb0:	7f 92       	push	r7
 eb2:	8f 92       	push	r8
 eb4:	9f 92       	push	r9
 eb6:	af 92       	push	r10
 eb8:	bf 92       	push	r11
 eba:	cf 92       	push	r12
 ebc:	df 92       	push	r13
 ebe:	ef 92       	push	r14
 ec0:	ff 92       	push	r15
 ec2:	0f 93       	push	r16
 ec4:	1f 93       	push	r17
 ec6:	2f 93       	push	r18
 ec8:	3f 93       	push	r19
 eca:	4f 93       	push	r20
 ecc:	5f 93       	push	r21
 ece:	6f 93       	push	r22
 ed0:	7f 93       	push	r23
 ed2:	8f 93       	push	r24
 ed4:	9f 93       	push	r25
 ed6:	af 93       	push	r26
 ed8:	bf 93       	push	r27
 eda:	cf 93       	push	r28
 edc:	df 93       	push	r29
 ede:	ef 93       	push	r30
 ee0:	ff 93       	push	r31
 ee2:	a0 91 4b 08 	lds	r26, 0x084B	; 0x80084b <pxCurrentTCB>
 ee6:	b0 91 4c 08 	lds	r27, 0x084C	; 0x80084c <pxCurrentTCB+0x1>
 eea:	0d b6       	in	r0, 0x3d	; 61
 eec:	0d 92       	st	X+, r0
 eee:	0e b6       	in	r0, 0x3e	; 62
 ef0:	0d 92       	st	X+, r0
 ef2:	d6 dc       	rcall	.-1620   	; 0x8a0 <vTaskIncrementTick>
 ef4:	68 de       	rcall	.-816    	; 0xbc6 <vTaskSwitchContext>
 ef6:	a0 91 4b 08 	lds	r26, 0x084B	; 0x80084b <pxCurrentTCB>
 efa:	b0 91 4c 08 	lds	r27, 0x084C	; 0x80084c <pxCurrentTCB+0x1>
 efe:	cd 91       	ld	r28, X+
 f00:	cd bf       	out	0x3d, r28	; 61
 f02:	dd 91       	ld	r29, X+
 f04:	de bf       	out	0x3e, r29	; 62
 f06:	ff 91       	pop	r31
 f08:	ef 91       	pop	r30
 f0a:	df 91       	pop	r29
 f0c:	cf 91       	pop	r28
 f0e:	bf 91       	pop	r27
 f10:	af 91       	pop	r26
 f12:	9f 91       	pop	r25
 f14:	8f 91       	pop	r24
 f16:	7f 91       	pop	r23
 f18:	6f 91       	pop	r22
 f1a:	5f 91       	pop	r21
 f1c:	4f 91       	pop	r20
 f1e:	3f 91       	pop	r19
 f20:	2f 91       	pop	r18
 f22:	1f 91       	pop	r17
 f24:	0f 91       	pop	r16
 f26:	ff 90       	pop	r15
 f28:	ef 90       	pop	r14
 f2a:	df 90       	pop	r13
 f2c:	cf 90       	pop	r12
 f2e:	bf 90       	pop	r11
 f30:	af 90       	pop	r10
 f32:	9f 90       	pop	r9
 f34:	8f 90       	pop	r8
 f36:	7f 90       	pop	r7
 f38:	6f 90       	pop	r6
 f3a:	5f 90       	pop	r5
 f3c:	4f 90       	pop	r4
 f3e:	3f 90       	pop	r3
 f40:	2f 90       	pop	r2
 f42:	1f 90       	pop	r1
 f44:	0f 90       	pop	r0
 f46:	0f be       	out	0x3f, r0	; 63
 f48:	0f 90       	pop	r0
 f4a:	08 95       	ret

00000f4c <__vector_13>:
 f4c:	a6 df       	rcall	.-180    	; 0xe9a <vPortYieldFromTick>
 f4e:	18 95       	reti

00000f50 <memset>:
 f50:	dc 01       	movw	r26, r24
 f52:	01 c0       	rjmp	.+2      	; 0xf56 <memset+0x6>
 f54:	6d 93       	st	X+, r22
 f56:	41 50       	subi	r20, 0x01	; 1
 f58:	50 40       	sbci	r21, 0x00	; 0
 f5a:	e0 f7       	brcc	.-8      	; 0xf54 <memset+0x4>
 f5c:	08 95       	ret

00000f5e <strncpy>:
 f5e:	fb 01       	movw	r30, r22
 f60:	dc 01       	movw	r26, r24
 f62:	41 50       	subi	r20, 0x01	; 1
 f64:	50 40       	sbci	r21, 0x00	; 0
 f66:	48 f0       	brcs	.+18     	; 0xf7a <strncpy+0x1c>
 f68:	01 90       	ld	r0, Z+
 f6a:	0d 92       	st	X+, r0
 f6c:	00 20       	and	r0, r0
 f6e:	c9 f7       	brne	.-14     	; 0xf62 <strncpy+0x4>
 f70:	01 c0       	rjmp	.+2      	; 0xf74 <strncpy+0x16>
 f72:	1d 92       	st	X+, r1
 f74:	41 50       	subi	r20, 0x01	; 1
 f76:	50 40       	sbci	r21, 0x00	; 0
 f78:	e0 f7       	brcc	.-8      	; 0xf72 <strncpy+0x14>
 f7a:	08 95       	ret

00000f7c <_exit>:
 f7c:	f8 94       	cli

00000f7e <__stop_program>:
 f7e:	ff cf       	rjmp	.-2      	; 0xf7e <__stop_program>
